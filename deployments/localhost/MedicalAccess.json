{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "licenseHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "DoctorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "DoctorRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "DoctorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PatientRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "PauseToggled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pharmacist",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "pharmacyId",
          "type": "string"
        }
      ],
      "name": "PharmacistRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pharmacist",
          "type": "address"
        }
      ],
      "name": "PharmacistRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOCTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PATIENT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PHARMACIST_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "doctorList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "doctorRegistry",
      "outputs": [
        {
          "internalType": "string",
          "name": "licenseHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "expiryDate",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialization",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyPause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDoctors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPharmacists",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        }
      ],
      "name": "getDoctor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "licenseHash",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "expiryDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "internalType": "struct IMedicalAccess.DoctorProfile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDoctorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacistAddress",
          "type": "address"
        }
      ],
      "name": "getPharmacist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "pharmacyId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "pharmacyName",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct IMedicalAccess.PharmacistProfile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPharmacistCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isVerifiedPharmacist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "patientRegistry",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pharmacistList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pharmacistRegistry",
      "outputs": [
        {
          "internalType": "string",
          "name": "pharmacyId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pharmacyName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isVerified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "licenseHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "licenseExpiry",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialization",
          "type": "string"
        }
      ],
      "name": "registerDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacistAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "pharmacyId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pharmacyName",
          "type": "string"
        }
      ],
      "name": "registerPharmacist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        }
      ],
      "name": "revokeDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacistAddress",
          "type": "address"
        }
      ],
      "name": "revokePharmacist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "durationHours",
          "type": "uint256"
        }
      ],
      "name": "togglePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x201f03d5746abbe00a87ce7a4fef96851d54e6558aa306eb9975a8d835611924",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "3680316",
    "logsBloom": "0x
    "blockHash": "0x2dc993190e5c32f797580d925395d92ac1da87fb8c27e2906eb6306c30fdb3db",
    "transactionHash": "0x201f03d5746abbe00a87ce7a4fef96851d54e6558aa306eb9975a8d835611924",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x201f03d5746abbe00a87ce7a4fef96851d54e6558aa306eb9975a8d835611924",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2dc993190e5c32f797580d925395d92ac1da87fb8c27e2906eb6306c30fdb3db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x201f03d5746abbe00a87ce7a4fef96851d54e6558aa306eb9975a8d835611924",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
          "0x0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x2dc993190e5c32f797580d925395d92ac1da87fb8c27e2906eb6306c30fdb3db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x201f03d5746abbe00a87ce7a4fef96851d54e6558aa306eb9975a8d835611924",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
          "0xc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de68",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x2dc993190e5c32f797580d925395d92ac1da87fb8c27e2906eb6306c30fdb3db"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x201f03d5746abbe00a87ce7a4fef96851d54e6558aa306eb9975a8d835611924",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
          "0x72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x2dc993190e5c32f797580d925395d92ac1da87fb8c27e2906eb6306c30fdb3db"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "3680316",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "8ec5f78b9fefdc517a47dcf928266ff6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DoctorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"DoctorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"DoctorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PatientRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pharmacist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"}],\"name\":\"PharmacistRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pharmacist\",\"type\":\"address\"}],\"name\":\"PharmacistRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOCTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PATIENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PHARMACIST_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"doctorList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"doctorRegistry\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDoctors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPharmacists\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"}],\"name\":\"getDoctor\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct IMedicalAccess.DoctorProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDoctorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacistAddress\",\"type\":\"address\"}],\"name\":\"getPharmacist\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pharmacyName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct IMedicalAccess.PharmacistProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPharmacistCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isVerifiedPharmacist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"patientRegistry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pharmacistList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pharmacistRegistry\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pharmacyName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"licenseExpiry\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"}],\"name\":\"registerDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacistAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pharmacyName\",\"type\":\"string\"}],\"name\":\"registerPharmacist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"}],\"name\":\"revokeDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacistAddress\",\"type\":\"address\"}],\"name\":\"revokePharmacist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"durationHours\",\"type\":\"uint256\"}],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/MedicalAccess.sol\":\"MedicalAccess\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/access/MedicalAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"../interfaces/IMedicalAccess.sol\\\";\\n\\ncontract MedicalAccess is AccessControl, IMedicalAccess {\\n    // Constants\\n    bytes32 public constant override DOCTOR_ROLE = keccak256(\\\"DOCTOR_ROLE\\\");\\n    bytes32 public constant override ADMIN_ROLE = keccak256(\\\"ADMIN_ROLE\\\");\\n    bytes32 public constant override PHARMACIST_ROLE =\\n        keccak256(\\\"PHARMACIST_ROLE\\\");\\n    bytes32 public constant override PATIENT_ROLE = keccak256(\\\"PATIENT_ROLE\\\");\\n\\n    //Storage\\n    // doctorRegistry[address] = DoctorProfile(\\\"QmXYZ\\\", 1735689600, true);\\n    // (string memory hash, uint256 expiry, bool active) = doctorRegistry(0x123...);\\n    mapping(address => DoctorProfile) public doctorRegistry;\\n    mapping(address => PharmacistProfile) public pharmacistRegistry;\\n    mapping(address => bool) public patientRegistry;\\n\\n    address[] public doctorList;\\n    address[] public pharmacistList;\\n    mapping(address => uint256) private doctorIndex;\\n    mapping(address => uint256) private pharmacistIndex;\\n\\n    bool public emergencyPause;\\n    uint256 public pauseExpiry;\\n\\n    constructor() {\\n        _grantRole(ADMIN_ROLE, msg.sender); // Deployer becomes admin\\n        _setRoleAdmin(DOCTOR_ROLE, ADMIN_ROLE);\\n        _setRoleAdmin(PHARMACIST_ROLE, ADMIN_ROLE);\\n        _setRoleAdmin(PATIENT_ROLE, ADMIN_ROLE);\\n    }\\n\\n    // modifier\\n    modifier onlyAdmin() {\\n        require(hasRole(ADMIN_ROLE, msg.sender), \\\"Caller is not an Admin\\\");\\n        _;\\n    }\\n\\n    modifier notPaused() {\\n        if (emergencyPause && block.timestamp >= pauseExpiry) {\\n            emergencyPause = false; // Auto-expire\\n        }\\n        require(!emergencyPause, \\\"Contract paused\\\");\\n        _;\\n    }\\n\\n    function hasRole(\\n        bytes32 role,\\n        address account\\n    ) public view override(AccessControl, IMedicalAccess) returns (bool) {\\n        return super.hasRole(role, account);\\n    }\\n\\n    function registerDoctor(\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external override onlyAdmin notPaused {\\n        require(licenseExpiry > block.timestamp, \\\"License Expired\\\");\\n        require(bytes(licenseHash).length > 0, \\\"Invalid License\\\");\\n        require(doctorAddress != address(0), \\\"Invalid Address\\\");\\n        require(bytes(name).length > 0, \\\"Name required\\\");\\n        require(bytes(specialization).length > 0, \\\"Specialization required\\\");\\n        require(\\n            !doctorRegistry[doctorAddress].isActive,\\n            \\\"Doctor already registered\\\"\\n        );\\n        _grantRole(DOCTOR_ROLE, doctorAddress);\\n        doctorRegistry[doctorAddress] = DoctorProfile({\\n            licenseHash: licenseHash,\\n            expiryDate: licenseExpiry,\\n            name: name,\\n            specialization: specialization,\\n            isActive: true\\n        });\\n        doctorList.push(doctorAddress);\\n        doctorIndex[doctorAddress] = doctorList.length;\\n        emit DoctorRegistered(doctorAddress, licenseHash, licenseExpiry);\\n    }\\n\\n    function revokeDoctor(\\n        address doctorAddress\\n    ) external override onlyAdmin notPaused {\\n        uint256 index = doctorIndex[doctorAddress];\\n        require(index > 0, \\\"Not an active doctor\\\");\\n        require(doctorRegistry[doctorAddress].isActive, \\\"Not an active doctor\\\");\\n\\n        doctorList[index - 1] = doctorList[doctorList.length - 1];\\n        doctorIndex[doctorList[index - 1]] = index; // Update swapped item\\n        doctorList.pop();\\n        doctorIndex[doctorAddress] = 0;\\n\\n        _revokeRole(DOCTOR_ROLE, doctorAddress);\\n        doctorRegistry[doctorAddress].isActive = false;\\n        emit DoctorRevoked(doctorAddress);\\n    }\\n\\n    function registerPharmacist(\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external override onlyAdmin notPaused {\\n        require(pharmacistAddress != address(0), \\\"Invalid Address\\\");\\n        require(\\n            !pharmacistRegistry[pharmacistAddress].isVerified,\\n            \\\"Pharmacist already Registered\\\"\\n        );\\n        _grantRole(PHARMACIST_ROLE, pharmacistAddress);\\n        pharmacistRegistry[pharmacistAddress] = PharmacistProfile({\\n            pharmacyId: pharmacyId,\\n            pharmacyName: pharmacyName,\\n            isVerified: true\\n        });\\n        pharmacistList.push(pharmacistAddress);\\n        pharmacistIndex[pharmacistAddress] = pharmacistList.length;\\n        emit PharmacistRegistered(pharmacistAddress, pharmacyId);\\n    }\\n\\n    function revokePharmacist(\\n        address pharmacistAddress\\n    ) external override onlyAdmin {\\n        uint256 index = pharmacistIndex[pharmacistAddress];\\n        require(index > 0, \\\"Pharmacist not registered\\\");\\n        require(\\n            pharmacistRegistry[pharmacistAddress].isVerified,\\n            \\\"Pharmacist not verified\\\"\\n        );\\n\\n        pharmacistList[index - 1] = pharmacistList[pharmacistList.length - 1];\\n        pharmacistIndex[pharmacistList[index - 1]] = index; // Update swapped item\\n        pharmacistList.pop();\\n        pharmacistIndex[pharmacistAddress] = 0;\\n\\n        _revokeRole(PHARMACIST_ROLE, pharmacistAddress);\\n        emit PharmacistRevoked(pharmacistAddress);\\n    }\\n\\n    function registerPatient() external override notPaused {\\n        require(!patientRegistry[msg.sender], \\\"Patient already registered\\\");\\n        _grantRole(PATIENT_ROLE, msg.sender);\\n        patientRegistry[msg.sender] = true;\\n        emit PatientRegistered(msg.sender);\\n    }\\n\\n    // function renewDoctorLicense(\\n    //     address doctorAddress,\\n    //     uint256 newExpiry\\n    // ) external override onlyAdmin notPaused {\\n    //     require(newExpiry > block.timestamp, \\\"Invalid expiry date\\\");\\n    //     doctorRegistry[doctorAddress].expiryDate = newExpiry;\\n    // }\\n\\n    function togglePause(uint256 durationHours) external override onlyAdmin {\\n        emergencyPause = !emergencyPause;\\n        pauseExpiry = emergencyPause\\n            ? block.timestamp + (durationHours * 1 hours)\\n            : 0;\\n        emit PauseToggled(emergencyPause);\\n    }\\n\\n    //utils\\n    function isActive(\\n        address doctorAddress\\n    ) external view override returns (bool) {\\n        DoctorProfile memory doc = doctorRegistry[doctorAddress];\\n        return\\n            hasRole(DOCTOR_ROLE, doctorAddress) &&\\n            doc.isActive &&\\n            doc.expiryDate > block.timestamp;\\n    }\\n\\n    function isVerifiedPharmacist(\\n        address account\\n    ) public view override returns (bool) {\\n        return\\n            hasRole(PHARMACIST_ROLE, account) &&\\n            pharmacistRegistry[account].isVerified;\\n    }\\n\\n    function getAllDoctors() external view override returns (address[] memory) {\\n        return doctorList;\\n    }\\n\\n    function getAllPharmacists()\\n        external\\n        view\\n        override\\n        returns (address[] memory)\\n    {\\n        return pharmacistList;\\n    }\\n\\n    function getDoctorCount() external view override returns (uint256) {\\n        return doctorList.length;\\n    }\\n\\n    function getPharmacistCount() external view override returns (uint256) {\\n        return pharmacistList.length;\\n    }\\n\\n    function getDoctor(\\n        address doctorAddress\\n    ) external view override returns (DoctorProfile memory) {\\n        return doctorRegistry[doctorAddress];\\n    }\\n\\n    function getPharmacist(\\n        address pharmacistAddress\\n    ) external view override returns (PharmacistProfile memory) {\\n        return pharmacistRegistry[pharmacistAddress];\\n    }\\n\\n    function supportsInterface(\\n        bytes4 interfaceId\\n    ) public view override(AccessControl) returns (bool) {\\n        return\\n            interfaceId == type(IMedicalAccess).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0x944277b76b4d7f27e5c4e6ec658f5e0181ab529ca72fb023e5a0181e64fd699b\",\"license\":\"MIT\"},\"contracts/interfaces/IMedicalAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\ninterface IMedicalAccess {\\n    // Struct Definitions\\n    struct DoctorProfile {\\n        string licenseHash;\\n        uint256 expiryDate;\\n        string name;\\n        string specialization;\\n        bool isActive;\\n    }\\n\\n    struct PharmacistProfile {\\n        string pharmacyId;\\n        string pharmacyName;\\n        bool isVerified;\\n    }\\n\\n    // Events\\n    event DoctorRegistered(\\n        address indexed doctor,\\n        string licenseHash,\\n        uint256 expiry\\n    );\\n    event DoctorUpdated(address indexed doctor);\\n    event DoctorRevoked(address indexed doctor);\\n    event PharmacistRegistered(address indexed pharmacist, string pharmacyId);\\n    event PharmacistRevoked(address indexed pharmacist);\\n    event PatientRegistered(address indexed account);\\n    event PauseToggled(bool isPaused);\\n\\n    // Role Constants\\n    function DOCTOR_ROLE() external pure returns (bytes32);\\n\\n    function PHARMACIST_ROLE() external pure returns (bytes32);\\n\\n    function ADMIN_ROLE() external pure returns (bytes32);\\n\\n    function PATIENT_ROLE() external view returns (bytes32);\\n\\n    // Role Verification\\n    function isActive(address doctorAddress) external view returns (bool);\\n\\n    function isVerifiedPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (bool);\\n\\n    function hasRole(\\n        bytes32 role,\\n        address account\\n    ) external view returns (bool);\\n\\n    // Getters\\n    function getDoctor(\\n        address doctorAddress\\n    ) external view returns (DoctorProfile memory);\\n\\n    function getPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (PharmacistProfile memory);\\n\\n    function getAllDoctors() external view returns (address[] memory);\\n\\n    function getAllPharmacists() external view returns (address[] memory);\\n\\n    function getDoctorCount() external view returns (uint256);\\n\\n    function getPharmacistCount() external view returns (uint256);\\n\\n    // Registration Functions\\n    function registerDoctor(\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external;\\n\\n    function revokeDoctor(address doctorAddress) external;\\n\\n    function registerPharmacist(\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external;\\n\\n    function revokePharmacist(address pharmacistAddress) external;\\n\\n    function registerPatient() external;\\n\\n    // function renewDoctorLicense(\\n    //     address doctorAddress,\\n    //     uint256 newExpiry\\n    // ) external;\\n\\n    // System Controls\\n    function togglePause(uint256 durationHours) external;\\n\\n    function emergencyPause() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8c35a3f78cb122ad415725712ed2eacbbbbb9d7e7bea8b881e85515ce3b26eb4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506100417fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361013760201b60201c565b506100927f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561023460201b60201c565b6100e27fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de687fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561023460201b60201c565b6101327f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177561023460201b60201c565b610340565b6000610149838361029560201b60201c565b61022957600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506101c66102af60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061022e565b600090505b92915050565b6000610245836102b760201b60201c565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b60006102a783836102d660201b60201c565b905092915050565b600033905090565b6000806000838152602001908152602001600020600101549050919050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b613fd88061034f6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806379111c1c1161010f578063a6f80d52116100a2578063d547741f11610071578063d547741f146105f9578063f0d9509014610615578063f125af6b14610633578063fec331f214610651576101f0565b8063a6f80d521461056d578063ac5cb97d1461059f578063c532d9fa146105bd578063d1eb1652146105db576101f0565b80639c80cfa3116100de5780639c80cfa3146104d15780639db92d68146105015780639f8a13d71461051f578063a217fddf1461054f576101f0565b806379111c1c14610449578063822d38851461046757806384efc52f1461047157806391d14854146104a1576101f0565b806336568abe1161018757806351858e271161015657806351858e27146103ad57806356f25d27146103cb5780635ec3243b146103fb57806375b238fc1461042b576101f0565b806336568abe1461033d57806339c59de9146103595780633b0c0f0f146103755780634374357014610391576101f0565b80631743acf7116101c35780631743acf71461028d578063248a9ca3146102c15780632f04e064146102f15780632f2ff15d14610321576101f0565b806301ffc9a7146101f55780630416af2714610225578063088be8c314610241578063127ca4b41461025d575b600080fd5b61020f600480360381019061020a9190612cf1565b61066f565b60405161021c9190612d39565b60405180910390f35b61023f600480360381019061023a9190612db2565b6106e9565b005b61025b60048036038101906102569190612f25565b610b96565b005b61027760048036038101906102729190612fe6565b610f63565b6040516102849190613022565b60405180910390f35b6102a760048036038101906102a29190612db2565b610fa2565b6040516102b89594939291906130cb565b60405180910390f35b6102db60048036038101906102d69190613169565b61117d565b6040516102e891906131a5565b60405180910390f35b61030b60048036038101906103069190612db2565b61119c565b60405161031891906132ac565b60405180910390f35b61033b600480360381019061033691906132ce565b6113d0565b005b610357600480360381019061035291906132ce565b6113f2565b005b610373600480360381019061036e9190612db2565b61146d565b005b61038f600480360381019061038a919061330e565b611830565b005b6103ab60048036038101906103a69190612fe6565b611d3b565b005b6103b5611e52565b6040516103c29190612d39565b60405180910390f35b6103e560048036038101906103e09190612db2565b611e65565b6040516103f29190612d39565b60405180910390f35b61041560048036038101906104109190612fe6565b611ef0565b6040516104229190613022565b60405180910390f35b610433611f2f565b60405161044091906131a5565b60405180910390f35b610451611f53565b60405161045e91906133dd565b60405180910390f35b61046f611f60565b005b61048b60048036038101906104869190612db2565b612144565b604051610498919061344f565b60405180910390f35b6104bb60048036038101906104b691906132ce565b6122dc565b6040516104c89190612d39565b60405180910390f35b6104eb60048036038101906104e69190612db2565b6122f0565b6040516104f89190612d39565b60405180910390f35b610509612310565b604051610516919061352f565b60405180910390f35b61053960048036038101906105349190612db2565b61239e565b6040516105469190612d39565b60405180910390f35b610557612616565b60405161056491906131a5565b60405180910390f35b61058760048036038101906105829190612db2565b61261d565b60405161059693929190613551565b60405180910390f35b6105a7612764565b6040516105b491906131a5565b60405180910390f35b6105c5612788565b6040516105d291906131a5565b60405180910390f35b6105e36127ac565b6040516105f091906133dd565b60405180910390f35b610613600480360381019061060e91906132ce565b6127b9565b005b61061d6127db565b60405161062a919061352f565b60405180910390f35b61063b612869565b60405161064891906133dd565b60405180910390f35b61065961286f565b60405161066691906131a5565b60405180910390f35b60007f4a4f6b00000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806106e257506106e182612893565b5b9050919050565b6107137fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336122dc565b610752576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610749906135e2565b60405180910390fd5b600860009054906101000a900460ff16801561077057506009544210155b15610791576000600860006101000a81548160ff0219169083151502179055505b600860009054906101000a900460ff16156107e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d89061364e565b60405180910390fd5b6000600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f906136ba565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff166108f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ee906136ba565b60405180910390fd5b6004600160048054905061090b9190613709565b8154811061091c5761091b61373d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660046001836109569190613709565b815481106109675761096661373d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806006600060046001856109c39190613709565b815481106109d4576109d361373d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506004805480610a4f57610a4e61376c565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610af37f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f8361290d565b506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fc7053e532de062d754b8ed96090affe0c4ba36dde0a699de7dd5185a9a9e7d0f60405160405180910390a25050565b610bc07fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336122dc565b610bff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf6906135e2565b60405180910390fd5b600860009054906101000a900460ff168015610c1d57506009544210155b15610c3e576000600860006101000a81548160ff0219169083151502179055505b600860009054906101000a900460ff1615610c8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c859061364e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cf4906137e7565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610d8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8490613853565b60405180910390fd5b610db77fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de68846129ff565b50604051806060016040528083815260200182815260200160011515815250600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610e2a9190613a7f565b506020820151816001019081610e409190613a7f565b5060408201518160020160006101000a81548160ff0219169083151502179055509050506005839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600580549050600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167ff780bede1449966edddb53884c0ea6892f688b86aa75813f703f4ee50ec16e5b83604051610f569190613b51565b60405180910390a2505050565b60048181548110610f7357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050806000018054610fc5906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610ff1906138a2565b801561103e5780601f106110135761010080835404028352916020019161103e565b820191906000526020600020905b81548152906001019060200180831161102157829003601f168201915b505050505090806001015490806002018054611059906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611085906138a2565b80156110d25780601f106110a7576101008083540402835291602001916110d2565b820191906000526020600020905b8154815290600101906020018083116110b557829003601f168201915b5050505050908060030180546110e7906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611113906138a2565b80156111605780601f1061113557610100808354040283529160200191611160565b820191906000526020600020905b81548152906001019060200180831161114357829003601f168201915b5050505050908060040160009054906101000a900460ff16905085565b6000806000838152602001908152602001600020600101549050919050565b6111a4612c31565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546111fe906138a2565b80601f016020809104026020016040519081016040528092919081815260200182805461122a906138a2565b80156112775780601f1061124c57610100808354040283529160200191611277565b820191906000526020600020905b81548152906001019060200180831161125a57829003601f168201915b505050505081526020016001820154815260200160028201805461129a906138a2565b80601f01602080910402602001604051908101604052809291908181526020018280546112c6906138a2565b80156113135780601f106112e857610100808354040283529160200191611313565b820191906000526020600020905b8154815290600101906020018083116112f657829003601f168201915b5050505050815260200160038201805461132c906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054611358906138a2565b80156113a55780601f1061137a576101008083540402835291602001916113a5565b820191906000526020600020905b81548152906001019060200180831161138857829003601f168201915b505050505081526020016004820160009054906101000a900460ff1615151515815250509050919050565b6113d98261117d565b6113e281612af0565b6113ec83836129ff565b50505050565b6113fa612b04565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461145e576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611468828261290d565b505050565b6114977fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336122dc565b6114d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cd906135e2565b60405180910390fd5b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161155d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155490613bbf565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166115ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e390613c2b565b60405180910390fd5b600560016005805490506116009190613709565b815481106116115761161061373d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600560018361164b9190613709565b8154811061165c5761165b61373d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806007600060056001856116b89190613709565b815481106116c9576116c861373d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060058054806117445761174361376c565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506117e87fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de688361290d565b508173ffffffffffffffffffffffffffffffffffffffff167f3d35d2ee499267c27c37466f419f5d2fb4f9d71671ba366201725410649035d360405160405180910390a25050565b61185a7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336122dc565b611899576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611890906135e2565b60405180910390fd5b600860009054906101000a900460ff1680156118b757506009544210155b156118d8576000600860006101000a81548160ff0219169083151502179055505b600860009054906101000a900460ff1615611928576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191f9061364e565b60405180910390fd5b42831161196a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196190613c97565b60405180910390fd5b60008451116119ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a590613d03565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a14906137e7565b60405180910390fd5b6000825111611a61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5890613d6f565b60405180910390fd5b6000815111611aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9c90613ddb565b60405180910390fd5b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1615611b35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2c90613e47565b60405180910390fd5b611b5f7f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f866129ff565b506040518060a0016040528085815260200184815260200183815260200182815260200160011515815250600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611bde9190613a7f565b50602082015181600101556040820151816002019081611bfe9190613a7f565b506060820151816003019081611c149190613a7f565b5060808201518160040160006101000a81548160ff0219169083151502179055509050506004859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600480549050600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f1f5e33d2573da99a901bca6b2c06d5f12b75dfd179bcbbe46a5216cf8349ee6b8585604051611d2c929190613e67565b60405180910390a25050505050565b611d657fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775336122dc565b611da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9b906135e2565b60405180910390fd5b600860009054906101000a900460ff1615600860006101000a81548160ff021916908315150217905550600860009054906101000a900460ff16611de9576000611e03565b610e1081611df79190613e97565b42611e029190613ed9565b5b6009819055507f9077d36bc00859b5c3f320310707208543dd35092cb0a0fe117d0c6a558b148b600860009054906101000a900460ff16604051611e479190612d39565b60405180910390a150565b600860009054906101000a900460ff1681565b6000611e917fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de68836122dc565b8015611ee95750600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff165b9050919050565b60058181548110611f0057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6000600480549050905090565b600860009054906101000a900460ff168015611f7e57506009544210155b15611f9f576000600860006101000a81548160ff0219169083151502179055505b600860009054906101000a900460ff1615611fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fe69061364e565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561207c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161207390613f59565b60405180910390fd5b6120a67f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed336129ff565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fc9fa2003fca4ce0dfc8cb0deae32266b715536df6685365b05b5be96ede8e49c60405160405180910390a2565b61214c612c62565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546121a6906138a2565b80601f01602080910402602001604051908101604052809291908181526020018280546121d2906138a2565b801561221f5780601f106121f45761010080835404028352916020019161221f565b820191906000526020600020905b81548152906001019060200180831161220257829003601f168201915b50505050508152602001600182018054612238906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054612264906138a2565b80156122b15780601f10612286576101008083540402835291602001916122b1565b820191906000526020600020905b81548152906001019060200180831161229457829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050919050565b60006122e88383612b0c565b905092915050565b60036020528060005260406000206000915054906101000a900460ff1681565b6060600580548060200260200160405190810160405280929190818152602001828054801561239457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161234a575b5050505050905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546123fb906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054612427906138a2565b80156124745780601f1061244957610100808354040283529160200191612474565b820191906000526020600020905b81548152906001019060200180831161245757829003601f168201915b5050505050815260200160018201548152602001600282018054612497906138a2565b80601f01602080910402602001604051908101604052809291908181526020018280546124c3906138a2565b80156125105780601f106124e557610100808354040283529160200191612510565b820191906000526020600020905b8154815290600101906020018083116124f357829003601f168201915b50505050508152602001600382018054612529906138a2565b80601f0160208091040260200160405190810160405280929190818152602001828054612555906138a2565b80156125a25780601f10612577576101008083540402835291602001916125a2565b820191906000526020600020905b81548152906001019060200180831161258557829003601f168201915b505050505081526020016004820160009054906101000a900460ff16151515158152505090506125f27f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f846122dc565b80156125ff575080608001515b801561260e5750428160200151115b915050919050565b6000801b81565b6002602052806000526040600020600091509050806000018054612640906138a2565b80601f016020809104026020016040519081016040528092919081815260200182805461266c906138a2565b80156126b95780601f1061268e576101008083540402835291602001916126b9565b820191906000526020600020905b81548152906001019060200180831161269c57829003601f168201915b5050505050908060010180546126ce906138a2565b80601f01602080910402602001604051908101604052809291908181526020018280546126fa906138a2565b80156127475780601f1061271c57610100808354040283529160200191612747565b820191906000526020600020905b81548152906001019060200180831161272a57829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b7f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed81565b7fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de6881565b6000600580549050905090565b6127c28261117d565b6127cb81612af0565b6127d5838361290d565b50505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561285f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612815575b5050505050905090565b60095481565b7f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f81565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480612906575061290582612b76565b5b9050919050565b600061291983836122dc565b156129f457600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612991612b04565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a4600190506129f9565b600090505b92915050565b6000612a0b83836122dc565b612ae557600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612a82612b04565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050612aea565b600090505b92915050565b612b0181612afc612b04565b612be0565b50565b600033905090565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b612bea82826122dc565b612c2d5780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401612c24929190613f79565b60405180910390fd5b5050565b6040518060a00160405280606081526020016000815260200160608152602001606081526020016000151581525090565b604051806060016040528060608152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612cce81612c99565b8114612cd957600080fd5b50565b600081359050612ceb81612cc5565b92915050565b600060208284031215612d0757612d06612c8f565b5b6000612d1584828501612cdc565b91505092915050565b60008115159050919050565b612d3381612d1e565b82525050565b6000602082019050612d4e6000830184612d2a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612d7f82612d54565b9050919050565b612d8f81612d74565b8114612d9a57600080fd5b50565b600081359050612dac81612d86565b92915050565b600060208284031215612dc857612dc7612c8f565b5b6000612dd684828501612d9d565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b612e3282612de9565b810181811067ffffffffffffffff82111715612e5157612e50612dfa565b5b80604052505050565b6000612e64612c85565b9050612e708282612e29565b919050565b600067ffffffffffffffff821115612e9057612e8f612dfa565b5b612e9982612de9565b9050602081019050919050565b82818337600083830152505050565b6000612ec8612ec384612e75565b612e5a565b905082815260208101848484011115612ee457612ee3612de4565b5b612eef848285612ea6565b509392505050565b600082601f830112612f0c57612f0b612ddf565b5b8135612f1c848260208601612eb5565b91505092915050565b600080600060608486031215612f3e57612f3d612c8f565b5b6000612f4c86828701612d9d565b935050602084013567ffffffffffffffff811115612f6d57612f6c612c94565b5b612f7986828701612ef7565b925050604084013567ffffffffffffffff811115612f9a57612f99612c94565b5b612fa686828701612ef7565b9150509250925092565b6000819050919050565b612fc381612fb0565b8114612fce57600080fd5b50565b600081359050612fe081612fba565b92915050565b600060208284031215612ffc57612ffb612c8f565b5b600061300a84828501612fd1565b91505092915050565b61301c81612d74565b82525050565b60006020820190506130376000830184613013565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561307757808201518184015260208101905061305c565b60008484015250505050565b600061308e8261303d565b6130988185613048565b93506130a8818560208601613059565b6130b181612de9565b840191505092915050565b6130c581612fb0565b82525050565b600060a08201905081810360008301526130e58188613083565b90506130f460208301876130bc565b81810360408301526131068186613083565b9050818103606083015261311a8185613083565b90506131296080830184612d2a565b9695505050505050565b6000819050919050565b61314681613133565b811461315157600080fd5b50565b6000813590506131638161313d565b92915050565b60006020828403121561317f5761317e612c8f565b5b600061318d84828501613154565b91505092915050565b61319f81613133565b82525050565b60006020820190506131ba6000830184613196565b92915050565b600082825260208201905092915050565b60006131dc8261303d565b6131e681856131c0565b93506131f6818560208601613059565b6131ff81612de9565b840191505092915050565b61321381612fb0565b82525050565b61322281612d1e565b82525050565b600060a083016000830151848203600086015261324582826131d1565b915050602083015161325a602086018261320a565b506040830151848203604086015261327282826131d1565b9150506060830151848203606086015261328c82826131d1565b91505060808301516132a16080860182613219565b508091505092915050565b600060208201905081810360008301526132c68184613228565b905092915050565b600080604083850312156132e5576132e4612c8f565b5b60006132f385828601613154565b925050602061330485828601612d9d565b9150509250929050565b600080600080600060a0868803121561332a57613329612c8f565b5b600061333888828901612d9d565b955050602086013567ffffffffffffffff81111561335957613358612c94565b5b61336588828901612ef7565b945050604061337688828901612fd1565b935050606086013567ffffffffffffffff81111561339757613396612c94565b5b6133a388828901612ef7565b925050608086013567ffffffffffffffff8111156133c4576133c3612c94565b5b6133d088828901612ef7565b9150509295509295909350565b60006020820190506133f260008301846130bc565b92915050565b6000606083016000830151848203600086015261341582826131d1565b9150506020830151848203602086015261342f82826131d1565b91505060408301516134446040860182613219565b508091505092915050565b6000602082019050818103600083015261346981846133f8565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6134a681612d74565b82525050565b60006134b8838361349d565b60208301905092915050565b6000602082019050919050565b60006134dc82613471565b6134e6818561347c565b93506134f18361348d565b8060005b8381101561352257815161350988826134ac565b9750613514836134c4565b9250506001810190506134f5565b5085935050505092915050565b6000602082019050818103600083015261354981846134d1565b905092915050565b6000606082019050818103600083015261356b8186613083565b9050818103602083015261357f8185613083565b905061358e6040830184612d2a565b949350505050565b7f43616c6c6572206973206e6f7420616e2041646d696e00000000000000000000600082015250565b60006135cc601683613048565b91506135d782613596565b602082019050919050565b600060208201905081810360008301526135fb816135bf565b9050919050565b7f436f6e7472616374207061757365640000000000000000000000000000000000600082015250565b6000613638600f83613048565b915061364382613602565b602082019050919050565b600060208201905081810360008301526136678161362b565b9050919050565b7f4e6f7420616e2061637469766520646f63746f72000000000000000000000000600082015250565b60006136a4601483613048565b91506136af8261366e565b602082019050919050565b600060208201905081810360008301526136d381613697565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061371482612fb0565b915061371f83612fb0565b9250828203905081811115613737576137366136da565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f496e76616c696420416464726573730000000000000000000000000000000000600082015250565b60006137d1600f83613048565b91506137dc8261379b565b602082019050919050565b60006020820190508181036000830152613800816137c4565b9050919050565b7f506861726d616369737420616c72656164792052656769737465726564000000600082015250565b600061383d601d83613048565b915061384882613807565b602082019050919050565b6000602082019050818103600083015261386c81613830565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806138ba57607f821691505b6020821081036138cd576138cc613873565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026139357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826138f8565b61393f86836138f8565b95508019841693508086168417925050509392505050565b6000819050919050565b600061397c61397761397284612fb0565b613957565b612fb0565b9050919050565b6000819050919050565b61399683613961565b6139aa6139a282613983565b848454613905565b825550505050565b600090565b6139bf6139b2565b6139ca81848461398d565b505050565b5b818110156139ee576139e36000826139b7565b6001810190506139d0565b5050565b601f821115613a3357613a04816138d3565b613a0d846138e8565b81016020851015613a1c578190505b613a30613a28856138e8565b8301826139cf565b50505b505050565b600082821c905092915050565b6000613a5660001984600802613a38565b1980831691505092915050565b6000613a6f8383613a45565b9150826002028217905092915050565b613a888261303d565b67ffffffffffffffff811115613aa157613aa0612dfa565b5b613aab82546138a2565b613ab68282856139f2565b600060209050601f831160018114613ae95760008415613ad7578287015190505b613ae18582613a63565b865550613b49565b601f198416613af7866138d3565b60005b82811015613b1f57848901518255600182019150602085019450602081019050613afa565b86831015613b3c5784890151613b38601f891682613a45565b8355505b6001600288020188555050505b505050505050565b60006020820190508181036000830152613b6b8184613083565b905092915050565b7f506861726d6163697374206e6f74207265676973746572656400000000000000600082015250565b6000613ba9601983613048565b9150613bb482613b73565b602082019050919050565b60006020820190508181036000830152613bd881613b9c565b9050919050565b7f506861726d6163697374206e6f74207665726966696564000000000000000000600082015250565b6000613c15601783613048565b9150613c2082613bdf565b602082019050919050565b60006020820190508181036000830152613c4481613c08565b9050919050565b7f4c6963656e736520457870697265640000000000000000000000000000000000600082015250565b6000613c81600f83613048565b9150613c8c82613c4b565b602082019050919050565b60006020820190508181036000830152613cb081613c74565b9050919050565b7f496e76616c6964204c6963656e73650000000000000000000000000000000000600082015250565b6000613ced600f83613048565b9150613cf882613cb7565b602082019050919050565b60006020820190508181036000830152613d1c81613ce0565b9050919050565b7f4e616d6520726571756972656400000000000000000000000000000000000000600082015250565b6000613d59600d83613048565b9150613d6482613d23565b602082019050919050565b60006020820190508181036000830152613d8881613d4c565b9050919050565b7f5370656369616c697a6174696f6e207265717569726564000000000000000000600082015250565b6000613dc5601783613048565b9150613dd082613d8f565b602082019050919050565b60006020820190508181036000830152613df481613db8565b9050919050565b7f446f63746f7220616c7265616479207265676973746572656400000000000000600082015250565b6000613e31601983613048565b9150613e3c82613dfb565b602082019050919050565b60006020820190508181036000830152613e6081613e24565b9050919050565b60006040820190508181036000830152613e818185613083565b9050613e9060208301846130bc565b9392505050565b6000613ea282612fb0565b9150613ead83612fb0565b9250828202613ebb81612fb0565b91508282048414831517613ed257613ed16136da565b5b5092915050565b6000613ee482612fb0565b9150613eef83612fb0565b9250828201905080821115613f0757613f066136da565b5b92915050565b7f50617469656e7420616c72656164792072656769737465726564000000000000600082015250565b6000613f43601a83613048565b9150613f4e82613f0d565b602082019050919050565b60006020820190508181036000830152613f7281613f36565b9050919050565b6000604082019050613f8e6000830185613013565b613f9b6020830184613196565b939250505056fea2646970667358221220e43dc9eb4010b73fadf547131697ffd1d78b4a37756a2deafc6dba574af1cfa964736f6c634300081c0033",
  "deployedBytecode": "",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
      },
      {
        "astId": 6943,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "doctorRegistry",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(DoctorProfile)7604_storage)"
      },
      {
        "astId": 6948,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pharmacistRegistry",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(PharmacistProfile)7611_storage)"
      },
      {
        "astId": 6952,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "patientRegistry",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6955,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "doctorList",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6958,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pharmacistList",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6962,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "doctorIndex",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6966,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pharmacistIndex",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6968,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "emergencyPause",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 6970,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pauseExpiry",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(DoctorProfile)7604_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IMedicalAccess.DoctorProfile)",
        "numberOfBytes": "32",
        "value": "t_struct(DoctorProfile)7604_storage"
      },
      "t_mapping(t_address,t_struct(PharmacistProfile)7611_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IMedicalAccess.PharmacistProfile)",
        "numberOfBytes": "32",
        "value": "t_struct(PharmacistProfile)7611_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)21_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DoctorProfile)7604_storage": {
        "encoding": "inplace",
        "label": "struct IMedicalAccess.DoctorProfile",
        "members": [
          {
            "astId": 7595,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "licenseHash",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7597,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "expiryDate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7599,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 7601,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "specialization",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 7603,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "isActive",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(PharmacistProfile)7611_storage": {
        "encoding": "inplace",
        "label": "struct IMedicalAccess.PharmacistProfile",
        "members": [
          {
            "astId": 7606,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "pharmacyId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7608,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "pharmacyName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7610,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "isVerified",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(RoleData)21_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}