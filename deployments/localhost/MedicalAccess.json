{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccessControlBadConfirmation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "neededRole",
          "type": "bytes32"
        }
      ],
      "name": "AccessControlUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "AccessApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "AccessRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "AccessRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "DataStored",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "licenseHash",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        }
      ],
      "name": "DoctorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "DoctorRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "DoctorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PatientRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "PauseToggled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pharmacist",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "pharmacyId",
          "type": "string"
        }
      ],
      "name": "PharmacistRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pharmacist",
          "type": "address"
        }
      ],
      "name": "PharmacistRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "RoleRevokedWithSender",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOCTOR_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PATIENT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PHARMACIST_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "encryptedKey",
          "type": "bytes"
        }
      ],
      "name": "approveAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "doctorList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "doctorRegistry",
      "outputs": [
        {
          "internalType": "string",
          "name": "licenseHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "expiryDate",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialization",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyPause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "getAccessRequests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "doctor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "patient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "doctorName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "hospital",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "fulfilled",
              "type": "bool"
            }
          ],
          "internalType": "struct IMedicalAccess.AccessRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllDoctors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPharmacists",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        }
      ],
      "name": "getDoctor",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "licenseHash",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "expiryDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "specialization",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ],
          "internalType": "struct IMedicalAccess.DoctorProfile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDoctorCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        }
      ],
      "name": "getPatientCID",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacistAddress",
          "type": "address"
        }
      ],
      "name": "getPharmacist",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "pharmacyId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "pharmacyName",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isVerified",
              "type": "bool"
            }
          ],
          "internalType": "struct IMedicalAccess.PharmacistProfile",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPharmacistCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        }
      ],
      "name": "isActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isVerifiedPharmacist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "patientRegistry",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pharmacistList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pharmacistRegistry",
      "outputs": [
        {
          "internalType": "string",
          "name": "pharmacyId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pharmacyName",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isVerified",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "licenseHash",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "licenseExpiry",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "specialization",
          "type": "string"
        }
      ],
      "name": "registerDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerPatient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacistAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "pharmacyId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "pharmacyName",
          "type": "string"
        }
      ],
      "name": "registerPharmacist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "callerConfirmation",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "patient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "doctorName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "hospital",
          "type": "string"
        }
      ],
      "name": "requestAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctor",
          "type": "address"
        }
      ],
      "name": "revokeAccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "doctorAddress",
          "type": "address"
        }
      ],
      "name": "revokeDoctor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pharmacistAddress",
          "type": "address"
        }
      ],
      "name": "revokePharmacist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "cid",
          "type": "string"
        }
      ],
      "name": "storeDataCID",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "durationHours",
          "type": "uint256"
        }
      ],
      "name": "togglePause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbe1983994a4715b8a7631c6feca289bf2d671ac106c731b478f5a3db35657082",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "4768086",
    "logsBloom": "0x
    "blockHash": "0xc9bcf863d9dfbfc185b29abcd62aa36a564f4ceaaeac1f821224f15f6abdcb02",
    "transactionHash": "0xbe1983994a4715b8a7631c6feca289bf2d671ac106c731b478f5a3db35657082",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xbe1983994a4715b8a7631c6feca289bf2d671ac106c731b478f5a3db35657082",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xc9bcf863d9dfbfc185b29abcd62aa36a564f4ceaaeac1f821224f15f6abdcb02"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xbe1983994a4715b8a7631c6feca289bf2d671ac106c731b478f5a3db35657082",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
          "0x0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xc9bcf863d9dfbfc185b29abcd62aa36a564f4ceaaeac1f821224f15f6abdcb02"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xbe1983994a4715b8a7631c6feca289bf2d671ac106c731b478f5a3db35657082",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
          "0xc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de68",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xc9bcf863d9dfbfc185b29abcd62aa36a564f4ceaaeac1f821224f15f6abdcb02"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xbe1983994a4715b8a7631c6feca289bf2d671ac106c731b478f5a3db35657082",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
          "0x72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0xc9bcf863d9dfbfc185b29abcd62aa36a564f4ceaaeac1f821224f15f6abdcb02"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "4768086",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7df1cc02c93ea497569df7ddc338a40e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"AccessApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"AccessRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"AccessRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"DataStored\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"DoctorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"DoctorRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"DoctorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PatientRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"PauseToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pharmacist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"}],\"name\":\"PharmacistRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pharmacist\",\"type\":\"address\"}],\"name\":\"PharmacistRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"RoleRevokedWithSender\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOCTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PATIENT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PHARMACIST_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encryptedKey\",\"type\":\"bytes\"}],\"name\":\"approveAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"doctorList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"doctorRegistry\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getAccessRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"doctorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"internalType\":\"struct IMedicalAccess.AccessRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllDoctors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPharmacists\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"}],\"name\":\"getDoctor\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"expiryDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct IMedicalAccess.DoctorProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDoctorCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"}],\"name\":\"getPatientCID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacistAddress\",\"type\":\"address\"}],\"name\":\"getPharmacist\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pharmacyName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"internalType\":\"struct IMedicalAccess.PharmacistProfile\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPharmacistCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isVerifiedPharmacist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"patientRegistry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pharmacistList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pharmacistRegistry\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pharmacyName\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"licenseHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"licenseExpiry\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"specialization\",\"type\":\"string\"}],\"name\":\"registerDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerPatient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacistAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"pharmacyId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pharmacyName\",\"type\":\"string\"}],\"name\":\"registerPharmacist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"doctorName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"hospital\",\"type\":\"string\"}],\"name\":\"requestAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctor\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"doctorAddress\",\"type\":\"address\"}],\"name\":\"revokeDoctor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pharmacistAddress\",\"type\":\"address\"}],\"name\":\"revokePharmacist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"}],\"name\":\"storeDataCID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"durationHours\",\"type\":\"uint256\"}],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/MedicalAccess.sol\":\"MedicalAccess\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/access/MedicalAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"../interfaces/IMedicalAccess.sol\\\";\\n\\ncontract MedicalAccess is AccessControl, IMedicalAccess {\\n    // Constants\\n    bytes32 public constant override DOCTOR_ROLE = keccak256(\\\"DOCTOR_ROLE\\\");\\n    bytes32 public constant override ADMIN_ROLE = keccak256(\\\"ADMIN_ROLE\\\");\\n    bytes32 public constant override PHARMACIST_ROLE =\\n        keccak256(\\\"PHARMACIST_ROLE\\\");\\n    bytes32 public constant override PATIENT_ROLE = keccak256(\\\"PATIENT_ROLE\\\");\\n\\n    //Storage\\n    // doctorRegistry[address] = DoctorProfile(\\\"QmXYZ\\\", 1735689600, true);\\n    // (string memory hash, uint256 expiry, bool active) = doctorRegistry(0x123...);\\n    mapping(address => DoctorProfile) public doctorRegistry;\\n    mapping(address => PharmacistProfile) public pharmacistRegistry;\\n    mapping(address => bool) public patientRegistry;\\n    mapping(address => string) private patientDataCIDs;\\n    mapping(address => AccessRequest[]) private accessRequests;\\n    mapping(address => mapping(address => bytes)) private accessKeys;\\n    uint256 private nextRequestId;\\n\\n    address[] public doctorList;\\n    address[] public pharmacistList;\\n    mapping(address => uint256) private doctorIndex;\\n    mapping(address => uint256) private pharmacistIndex;\\n\\n    bool public emergencyPause;\\n    uint256 public pauseExpiry;\\n\\n    constructor() {\\n        _grantRole(ADMIN_ROLE, msg.sender); // Deployer becomes admin\\n        _setRoleAdmin(DOCTOR_ROLE, ADMIN_ROLE);\\n        _setRoleAdmin(PHARMACIST_ROLE, ADMIN_ROLE);\\n        _setRoleAdmin(PATIENT_ROLE, ADMIN_ROLE);\\n    }\\n\\n    // modifier\\n    modifier onlyAdmin() {\\n        require(hasRole(ADMIN_ROLE, msg.sender), \\\"Caller is not an Admin\\\");\\n        _;\\n    }\\n\\n    modifier notPaused() {\\n        if (emergencyPause && block.timestamp >= pauseExpiry) {\\n            emergencyPause = false; // Auto-expire\\n        }\\n        require(!emergencyPause, \\\"Contract paused\\\");\\n        _;\\n    }\\n\\n    function hasRole(\\n        bytes32 role,\\n        address account\\n    ) public view override(AccessControl, IMedicalAccess) returns (bool) {\\n        return super.hasRole(role, account);\\n    }\\n\\n    function registerDoctor(\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external override onlyAdmin notPaused {\\n        require(licenseExpiry > block.timestamp, \\\"License Expired\\\");\\n        require(bytes(licenseHash).length > 0, \\\"Invalid License\\\");\\n        require(doctorAddress != address(0), \\\"Invalid Address\\\");\\n        require(bytes(name).length > 0, \\\"Name required\\\");\\n        require(bytes(specialization).length > 0, \\\"Specialization required\\\");\\n        require(\\n            !doctorRegistry[doctorAddress].isActive,\\n            \\\"Doctor already registered\\\"\\n        );\\n        _grantRole(DOCTOR_ROLE, doctorAddress);\\n        doctorRegistry[doctorAddress] = DoctorProfile({\\n            licenseHash: licenseHash,\\n            expiryDate: licenseExpiry,\\n            name: name,\\n            specialization: specialization,\\n            isActive: true\\n        });\\n        doctorList.push(doctorAddress);\\n        doctorIndex[doctorAddress] = doctorList.length;\\n        emit DoctorRegistered(doctorAddress, licenseHash, licenseExpiry);\\n    }\\n\\n    function revokeDoctor(\\n        address doctorAddress\\n    ) external override onlyAdmin notPaused {\\n        uint256 index = doctorIndex[doctorAddress];\\n        require(index > 0, \\\"Not an active doctor\\\");\\n        require(doctorRegistry[doctorAddress].isActive, \\\"Not an active doctor\\\");\\n\\n        doctorList[index - 1] = doctorList[doctorList.length - 1];\\n        doctorIndex[doctorList[index - 1]] = index; // Update swapped item\\n        doctorList.pop();\\n        doctorIndex[doctorAddress] = 0;\\n\\n        _revokeRole(DOCTOR_ROLE, doctorAddress);\\n        doctorRegistry[doctorAddress].isActive = false;\\n        emit DoctorRevoked(doctorAddress);\\n    }\\n\\n    function registerPharmacist(\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external override onlyAdmin notPaused {\\n        require(pharmacistAddress != address(0), \\\"Invalid Address\\\");\\n        require(\\n            !pharmacistRegistry[pharmacistAddress].isVerified,\\n            \\\"Pharmacist already Registered\\\"\\n        );\\n        _grantRole(PHARMACIST_ROLE, pharmacistAddress);\\n        pharmacistRegistry[pharmacistAddress] = PharmacistProfile({\\n            pharmacyId: pharmacyId,\\n            pharmacyName: pharmacyName,\\n            isVerified: true\\n        });\\n        pharmacistList.push(pharmacistAddress);\\n        pharmacistIndex[pharmacistAddress] = pharmacistList.length;\\n        emit PharmacistRegistered(pharmacistAddress, pharmacyId);\\n    }\\n\\n    function revokePharmacist(\\n        address pharmacistAddress\\n    ) external override onlyAdmin {\\n        uint256 index = pharmacistIndex[pharmacistAddress];\\n        require(index > 0, \\\"Pharmacist not registered\\\");\\n        require(\\n            pharmacistRegistry[pharmacistAddress].isVerified,\\n            \\\"Pharmacist not verified\\\"\\n        );\\n\\n        pharmacistList[index - 1] = pharmacistList[pharmacistList.length - 1];\\n        pharmacistIndex[pharmacistList[index - 1]] = index; // Update swapped item\\n        pharmacistList.pop();\\n        pharmacistIndex[pharmacistAddress] = 0;\\n\\n        _revokeRole(PHARMACIST_ROLE, pharmacistAddress);\\n        emit PharmacistRevoked(pharmacistAddress);\\n    }\\n\\n    function registerPatient() external override notPaused {\\n        require(!patientRegistry[msg.sender], \\\"Already registered\\\");\\n\\n        // Clear any existing role first\\n        if (hasRole(PATIENT_ROLE, msg.sender)) {\\n            _revokeRole(PATIENT_ROLE, msg.sender);\\n        }\\n\\n        _grantRole(PATIENT_ROLE, msg.sender);\\n        patientRegistry[msg.sender] = true;\\n        emit PatientRegistered(msg.sender);\\n    }\\n\\n    function requestAccess(\\n        address patient,\\n        string memory doctorName,\\n        string memory hospital\\n    ) external override onlyRole(DOCTOR_ROLE) {\\n        uint256 requestId = nextRequestId++;\\n        accessRequests[patient].push(\\n            AccessRequest({\\n                id: requestId,\\n                doctor: msg.sender,\\n                patient: patient,\\n                doctorName: doctorName,\\n                hospital: hospital,\\n                timestamp: block.timestamp,\\n                fulfilled: false\\n            })\\n        );\\n        emit AccessRequested(requestId, msg.sender, patient);\\n    }\\n\\n    function approveAccess(\\n        uint256 requestId,\\n        bytes memory encryptedKey\\n    ) external override {\\n        AccessRequest[] storage requests = accessRequests[msg.sender];\\n        for (uint i = 0; i < requests.length; i++) {\\n            if (requests[i].id == requestId) {\\n                requests[i].fulfilled = true;\\n                accessKeys[msg.sender][requests[i].doctor] = encryptedKey;\\n                emit AccessApproved(requestId, requests[i].doctor, msg.sender);\\n                return;\\n            }\\n        }\\n        revert(\\\"Request not found\\\");\\n    }\\n\\n    function storeDataCID(\\n        string calldata cid\\n    ) external override onlyRole(PATIENT_ROLE) {\\n        patientDataCIDs[msg.sender] = cid;\\n        emit DataStored(msg.sender, cid);\\n    }\\n\\n    function revokeAccess(address doctor) external override {\\n        delete accessKeys[msg.sender][doctor];\\n        emit AccessRevoked(doctor, msg.sender);\\n    }\\n\\n    // function renewDoctorLicense(\\n    //     address doctorAddress,\\n    //     uint256 newExpiry\\n    // ) external override onlyAdmin notPaused {\\n    //     require(newExpiry > block.timestamp, \\\"Invalid expiry date\\\");\\n    //     doctorRegistry[doctorAddress].expiryDate = newExpiry;\\n    // }\\n\\n    function togglePause(uint256 durationHours) external override onlyAdmin {\\n        emergencyPause = !emergencyPause;\\n        pauseExpiry = emergencyPause\\n            ? block.timestamp + (durationHours * 1 hours)\\n            : 0;\\n        emit PauseToggled(emergencyPause);\\n    }\\n\\n    //utils\\n    function isActive(\\n        address doctorAddress\\n    ) external view override returns (bool) {\\n        DoctorProfile memory doc = doctorRegistry[doctorAddress];\\n        return\\n            hasRole(DOCTOR_ROLE, doctorAddress) &&\\n            doc.isActive &&\\n            doc.expiryDate > block.timestamp;\\n    }\\n\\n    function isVerifiedPharmacist(\\n        address account\\n    ) public view override returns (bool) {\\n        return\\n            hasRole(PHARMACIST_ROLE, account) &&\\n            pharmacistRegistry[account].isVerified;\\n    }\\n\\n    function revokeRole(\\n        bytes32 role,\\n        address account\\n    ) public override onlyRole(getRoleAdmin(role)) {\\n        super.revokeRole(role, account);\\n        emit RoleRevokedWithSender(role, account);\\n    }\\n\\n    function getAllDoctors() external view override returns (address[] memory) {\\n        return doctorList;\\n    }\\n\\n    function getAllPharmacists()\\n        external\\n        view\\n        override\\n        returns (address[] memory)\\n    {\\n        return pharmacistList;\\n    }\\n\\n    function getDoctorCount() external view override returns (uint256) {\\n        return doctorList.length;\\n    }\\n\\n    function getPharmacistCount() external view override returns (uint256) {\\n        return pharmacistList.length;\\n    }\\n\\n    function getDoctor(\\n        address doctorAddress\\n    ) external view override returns (DoctorProfile memory) {\\n        return doctorRegistry[doctorAddress];\\n    }\\n\\n    function getPharmacist(\\n        address pharmacistAddress\\n    ) external view override returns (PharmacistProfile memory) {\\n        return pharmacistRegistry[pharmacistAddress];\\n    }\\n\\n    function getPatientCID(\\n        address patient\\n    ) external view override returns (string memory) {\\n        require(\\n            msg.sender == patient ||\\n                hasRole(ADMIN_ROLE, msg.sender) ||\\n                hasRole(DOCTOR_ROLE, msg.sender),\\n            \\\"No access\\\"\\n        );\\n        return patientDataCIDs[patient];\\n    }\\n\\n    function getAccessRequests(\\n        address patient\\n    ) external view override returns (AccessRequest[] memory) {\\n        return accessRequests[patient];\\n    }\\n\\n    function supportsInterface(\\n        bytes4 interfaceId\\n    ) public view override(AccessControl) returns (bool) {\\n        return\\n            interfaceId == type(IMedicalAccess).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0x6741d3f1913867c790aaf3649ab57a799825160ef4f4bb9ed32c769d9e3dc56b\",\"license\":\"MIT\"},\"contracts/interfaces/IMedicalAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\ninterface IMedicalAccess {\\n    // Struct Definitions\\n    struct DoctorProfile {\\n        string licenseHash;\\n        uint256 expiryDate;\\n        string name;\\n        string specialization;\\n        bool isActive;\\n    }\\n\\n    struct PharmacistProfile {\\n        string pharmacyId;\\n        string pharmacyName;\\n        bool isVerified;\\n    }\\n\\n    // Events\\n    event DoctorRegistered(\\n        address indexed doctor,\\n        string licenseHash,\\n        uint256 expiry\\n    );\\n\\n    struct AccessRequest {\\n        uint256 id;\\n        address doctor;\\n        address patient;\\n        string doctorName;\\n        string hospital;\\n        uint256 timestamp;\\n        bool fulfilled;\\n    }\\n\\n    event DoctorUpdated(address indexed doctor);\\n    event DoctorRevoked(address indexed doctor);\\n    event PharmacistRegistered(address indexed pharmacist, string pharmacyId);\\n    event PharmacistRevoked(address indexed pharmacist);\\n    event PatientRegistered(address indexed account);\\n    event PauseToggled(bool isPaused);\\n    event RoleRevokedWithSender(bytes32 indexed role, address indexed account);\\n    event DataStored(address indexed patient, string cid);\\n    event AccessRequested(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessApproved(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessRevoked(address indexed doctor, address indexed patient);\\n\\n    // Role Constants\\n    function DOCTOR_ROLE() external pure returns (bytes32);\\n\\n    function PHARMACIST_ROLE() external pure returns (bytes32);\\n\\n    function ADMIN_ROLE() external pure returns (bytes32);\\n\\n    function PATIENT_ROLE() external view returns (bytes32);\\n\\n    // Role Verification\\n    function isActive(address doctorAddress) external view returns (bool);\\n\\n    function isVerifiedPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (bool);\\n\\n    function hasRole(\\n        bytes32 role,\\n        address account\\n    ) external view returns (bool);\\n\\n    function requestAccess(\\n        address patient,\\n        string memory doctorName,\\n        string memory hospital\\n    ) external;\\n\\n    function approveAccess(\\n        uint256 requestId,\\n        bytes memory encryptedKey\\n    ) external;\\n\\n    function revokeAccess(address doctor) external;\\n\\n    function storeDataCID(string calldata cid) external;\\n\\n    // Getters\\n    function getDoctor(\\n        address doctorAddress\\n    ) external view returns (DoctorProfile memory);\\n\\n    function getPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (PharmacistProfile memory);\\n\\n    function getAllDoctors() external view returns (address[] memory);\\n\\n    function getAllPharmacists() external view returns (address[] memory);\\n\\n    function getDoctorCount() external view returns (uint256);\\n\\n    function getPharmacistCount() external view returns (uint256);\\n\\n    // Registration Functions\\n    function registerDoctor(\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external;\\n\\n    function revokeDoctor(address doctorAddress) external;\\n\\n    function registerPharmacist(\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external;\\n\\n    function revokePharmacist(address pharmacistAddress) external;\\n\\n    function registerPatient() external;\\n\\n    // function renewDoctorLicense(\\n    //     address doctorAddress,\\n    //     uint256 newExpiry\\n    // ) external;\\n\\n    // System Controls\\n    function togglePause(uint256 durationHours) external;\\n\\n    function getPatientCID(\\n        address patient\\n    ) external view returns (string memory);\\n\\n    function getAccessRequests(\\n        address patient\\n    ) external view returns (AccessRequest[] memory);\\n\\n    function emergencyPause() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x9ae43192ec03845598201f644d2a92f6ad5438cdcfc602b64a6c86089477eca8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102325760003560e01c8063822d388511610130578063a6f80d52116100b8578063d1eb16521161007c578063d1eb1652146106ed578063d547741f1461070b578063f0d9509014610727578063f125af6b14610745578063fec331f21461076357610232565b8063a6f80d5214610633578063a7e2981414610665578063ac5cb97d14610681578063c532d9fa1461069f578063cf374334146106bd57610232565b80639c80cfa3116100ff5780639c80cfa31461057b5780639db92d68146105ab5780639f8a13d7146105c9578063a1a72362146105f9578063a217fddf1461061557610232565b8063822d3885146104f557806384efc52f146104ff57806385e685311461052f57806391d148541461054b57610232565b806339c59de9116101be57806356f25d271161018257806356f25d27146104295780635ec3243b146104595780636bd9110e1461048957806375b238fc146104b957806379111c1c146104d757610232565b806339c59de91461039b5780633b0c0f0f146103b7578063405fa249146103d357806343743570146103ef57806351858e271461040b57610232565b80631743acf7116102055780631743acf7146102cf578063248a9ca3146103035780632f04e064146103335780632f2ff15d1461036357806336568abe1461037f57610232565b806301ffc9a7146102375780630416af2714610267578063088be8c314610283578063127ca4b41461029f575b600080fd5b610251600480360381019061024c91906139ed565b610781565b60405161025e9190613a35565b60405180910390f35b610281600480360381019061027c9190613aae565b6107fb565b005b61029d60048036038101906102989190613c21565b610ca8565b005b6102b960048036038101906102b49190613ce2565b611075565b6040516102c69190613d1e565b60405180910390f35b6102e960048036038101906102e49190613aae565b6110b4565b6040516102fa959493929190613dc7565b60405180910390f35b61031d60048036038101906103189190613e65565b61128f565b60405161032a9190613ea1565b60405180910390f35b61034d60048036038101906103489190613aae565b6112ae565b60405161035a9190613fa8565b60405180910390f35b61037d60048036038101906103789190613fca565b6114e2565b005b61039960048036038101906103949190613fca565b611504565b005b6103b560048036038101906103b09190613aae565b61157f565b005b6103d160048036038101906103cc919061400a565b611942565b005b6103ed60048036038101906103e89190614139565b611e4d565b005b61040960048036038101906104049190613ce2565b611f1b565b005b610413612032565b6040516104209190613a35565b60405180910390f35b610443600480360381019061043e9190613aae565b612045565b6040516104509190613a35565b60405180910390f35b610473600480360381019061046e9190613ce2565b6120d0565b6040516104809190613d1e565b60405180910390f35b6104a3600480360381019061049e9190613aae565b61210f565b6040516104b09190614186565b60405180910390f35b6104c16122b0565b6040516104ce9190613ea1565b60405180910390f35b6104df6122d4565b6040516104ec91906141a8565b60405180910390f35b6104fd6122e1565b005b61051960048036038101906105149190613aae565b612520565b604051610526919061421a565b60405180910390f35b61054960048036038101906105449190613aae565b6126b8565b005b61056560048036038101906105609190613fca565b61279d565b6040516105729190613a35565b60405180910390f35b61059560048036038101906105909190613aae565b6127b1565b6040516105a29190613a35565b60405180910390f35b6105b36127d1565b6040516105c091906142fa565b60405180910390f35b6105e360048036038101906105de9190613aae565b61285f565b6040516105f09190613a35565b60405180910390f35b610613600480360381019061060e91906143bd565b612ad7565b005b61061d612d52565b60405161062a9190613ea1565b60405180910390f35b61064d60048036038101906106489190613aae565b612d59565b60405161065c93929190614419565b60405180910390f35b61067f600480360381019061067a9190613c21565b612ea0565b005b610689613101565b6040516106969190613ea1565b60405180910390f35b6106a7613125565b6040516106b49190613ea1565b60405180910390f35b6106d760048036038101906106d29190613aae565b613149565b6040516106e491906145c3565b60405180910390f35b6106f56133e6565b60405161070291906141a8565b60405180910390f35b61072560048036038101906107209190613fca565b6133f3565b005b61072f613458565b60405161073c91906142fa565b60405180910390f35b61074d6134e6565b60405161075a91906141a8565b60405180910390f35b61076b6134ec565b6040516107789190613ea1565b60405180910390f35b60007f2d5da534000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107f457506107f382613510565b5b9050919050565b6108257fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361279d565b610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b90614631565b60405180910390fd5b600c60009054906101000a900460ff1680156108825750600d544210155b156108a3576000600c60006101000a81548160ff0219169083151502179055505b600c60009054906101000a900460ff16156108f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ea9061469d565b60405180910390fd5b6000600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161097a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097190614709565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16610a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a0090614709565b60405180910390fd5b60086001600880549050610a1d9190614758565b81548110610a2e57610a2d61478c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166008600183610a689190614758565b81548110610a7957610a7861478c565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a60006008600185610ad59190614758565b81548110610ae657610ae561478c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506008805480610b6157610b606147bb565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c057f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f8361358a565b506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167fc7053e532de062d754b8ed96090affe0c4ba36dde0a699de7dd5185a9a9e7d0f60405160405180910390a25050565b610cd27fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361279d565b610d11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0890614631565b60405180910390fd5b600c60009054906101000a900460ff168015610d2f5750600d544210155b15610d50576000600c60006101000a81548160ff0219169083151502179055505b600c60009054906101000a900460ff1615610da0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d979061469d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e0f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e0690614836565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610e9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e96906148a2565b60405180910390fd5b610ec97fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de688461367c565b50604051806060016040528083815260200182815260200160011515815250600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610f3c9190614ace565b506020820151816001019081610f529190614ace565b5060408201518160020160006101000a81548160ff0219169083151502179055509050506009839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600980549050600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff167ff780bede1449966edddb53884c0ea6892f688b86aa75813f703f4ee50ec16e5b836040516110689190614186565b60405180910390a2505050565b6008818154811061108557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60016020528060005260406000206000915090508060000180546110d7906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054611103906148f1565b80156111505780601f1061112557610100808354040283529160200191611150565b820191906000526020600020905b81548152906001019060200180831161113357829003601f168201915b50505050509080600101549080600201805461116b906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054611197906148f1565b80156111e45780601f106111b9576101008083540402835291602001916111e4565b820191906000526020600020905b8154815290600101906020018083116111c757829003601f168201915b5050505050908060030180546111f9906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054611225906148f1565b80156112725780601f1061124757610100808354040283529160200191611272565b820191906000526020600020905b81548152906001019060200180831161125557829003601f168201915b5050505050908060040160009054906101000a900460ff16905085565b6000806000838152602001908152602001600020600101549050919050565b6112b66138d0565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054611310906148f1565b80601f016020809104026020016040519081016040528092919081815260200182805461133c906148f1565b80156113895780601f1061135e57610100808354040283529160200191611389565b820191906000526020600020905b81548152906001019060200180831161136c57829003601f168201915b50505050508152602001600182015481526020016002820180546113ac906148f1565b80601f01602080910402602001604051908101604052809291908181526020018280546113d8906148f1565b80156114255780601f106113fa57610100808354040283529160200191611425565b820191906000526020600020905b81548152906001019060200180831161140857829003601f168201915b5050505050815260200160038201805461143e906148f1565b80601f016020809104026020016040519081016040528092919081815260200182805461146a906148f1565b80156114b75780601f1061148c576101008083540402835291602001916114b7565b820191906000526020600020905b81548152906001019060200180831161149a57829003601f168201915b505050505081526020016004820160009054906101000a900460ff1615151515815250509050919050565b6114eb8261128f565b6114f48161376d565b6114fe838361367c565b50505050565b61150c613781565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611570576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61157a828261358a565b505050565b6115a97fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361279d565b6115e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115df90614631565b60405180910390fd5b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161166f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166690614bec565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166116fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116f590614c58565b60405180910390fd5b600960016009805490506117129190614758565b815481106117235761172261478c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600960018361175d9190614758565b8154811061176e5761176d61478c565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600b600060096001856117ca9190614758565b815481106117db576117da61478c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506009805480611856576118556147bb565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556000600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118fa7fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de688361358a565b508173ffffffffffffffffffffffffffffffffffffffff167f3d35d2ee499267c27c37466f419f5d2fb4f9d71671ba366201725410649035d360405160405180910390a25050565b61196c7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361279d565b6119ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a290614631565b60405180910390fd5b600c60009054906101000a900460ff1680156119c95750600d544210155b156119ea576000600c60006101000a81548160ff0219169083151502179055505b600c60009054906101000a900460ff1615611a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a319061469d565b60405180910390fd5b428311611a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7390614cc4565b60405180910390fd5b6000845111611ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab790614d30565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603611b2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2690614836565b60405180910390fd5b6000825111611b73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6a90614d9c565b60405180910390fd5b6000815111611bb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bae90614e08565b60405180910390fd5b600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1615611c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3e90614e74565b60405180910390fd5b611c717f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f8661367c565b506040518060a0016040528085815260200184815260200183815260200182815260200160011515815250600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081611cf09190614ace565b50602082015181600101556040820151816002019081611d109190614ace565b506060820151816003019081611d269190614ace565b5060808201518160040160006101000a81548160ff0219169083151502179055509050506008859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600880549050600a60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f1f5e33d2573da99a901bca6b2c06d5f12b75dfd179bcbbe46a5216cf8349ee6b8585604051611e3e929190614e94565b60405180910390a25050505050565b7f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed611e778161376d565b8282600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209182611ec5929190614ecf565b503373ffffffffffffffffffffffffffffffffffffffff167f4b33dafb50dac5530c30aca4e4069fd67a18220888b874b8519558d1769d49a18484604051611f0e929190614fcc565b60405180910390a2505050565b611f457fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361279d565b611f84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f7b90614631565b60405180910390fd5b600c60009054906101000a900460ff1615600c60006101000a81548160ff021916908315150217905550600c60009054906101000a900460ff16611fc9576000611fe3565b610e1081611fd79190614ff0565b42611fe29190615032565b5b600d819055507f9077d36bc00859b5c3f320310707208543dd35092cb0a0fe117d0c6a558b148b600c60009054906101000a900460ff166040516120279190613a35565b60405180910390a150565b600c60009054906101000a900460ff1681565b60006120717fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de688361279d565b80156120c95750600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff165b9050919050565b600981815481106120e057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60608173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061217157506121707fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753361279d565b5b806121a257506121a17f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f3361279d565b5b6121e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121d8906150b2565b60405180910390fd5b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461222b906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054612257906148f1565b80156122a45780601f10612279576101008083540402835291602001916122a4565b820191906000526020600020905b81548152906001019060200180831161228757829003601f168201915b50505050509050919050565b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6000600880549050905090565b600c60009054906101000a900460ff1680156122ff5750600d544210155b15612320576000600c60006101000a81548160ff0219169083151502179055505b600c60009054906101000a900460ff1615612370576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123679061469d565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156123fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123f49061511e565b60405180910390fd5b6124277f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed3361279d565b15612458576124567f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed3361358a565b505b6124827f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed3361367c565b506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167fc9fa2003fca4ce0dfc8cb0deae32266b715536df6685365b05b5be96ede8e49c60405160405180910390a2565b612528613901565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082018054612582906148f1565b80601f01602080910402602001604051908101604052809291908181526020018280546125ae906148f1565b80156125fb5780601f106125d0576101008083540402835291602001916125fb565b820191906000526020600020905b8154815290600101906020018083116125de57829003601f168201915b50505050508152602001600182018054612614906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054612640906148f1565b801561268d5780601f106126625761010080835404028352916020019161268d565b820191906000526020600020905b81548152906001019060200180831161267057829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815250509050919050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006127409190613924565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f825c8be24eb0df19500f63e86c29e7d0d951e73056b889b891d85e40938d9b6e60405160405180910390a350565b60006127a98383613789565b905092915050565b60036020528060005260406000206000915054906101000a900460ff1681565b6060600980548060200260200160405190810160405280929190818152602001828054801561285557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161280b575b5050505050905090565b600080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546128bc906148f1565b80601f01602080910402602001604051908101604052809291908181526020018280546128e8906148f1565b80156129355780601f1061290a57610100808354040283529160200191612935565b820191906000526020600020905b81548152906001019060200180831161291857829003601f168201915b5050505050815260200160018201548152602001600282018054612958906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054612984906148f1565b80156129d15780601f106129a6576101008083540402835291602001916129d1565b820191906000526020600020905b8154815290600101906020018083116129b457829003601f168201915b505050505081526020016003820180546129ea906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054612a16906148f1565b8015612a635780601f10612a3857610100808354040283529160200191612a63565b820191906000526020600020905b815481529060010190602001808311612a4657829003601f168201915b505050505081526020016004820160009054906101000a900460ff1615151515815250509050612ab37f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f8461279d565b8015612ac0575080608001515b8015612acf5750428160200151115b915050919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015612d125783828281548110612b3d57612b3c61478c565b5b90600052602060002090600702016000015403612d05576001828281548110612b6957612b6861478c565b5b906000526020600020906007020160060160006101000a81548160ff02191690831515021790555082600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848481548110612be657612be561478c565b5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209081612c5e91906151a4565b503373ffffffffffffffffffffffffffffffffffffffff16828281548110612c8957612c8861478c565b5b906000526020600020906007020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16857f734eac5b54039ed4ed359c7034f5c743cbea175340fc22ca139f102119991ce960405160405180910390a45050612d4e565b8080600101915050612b1d565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d45906152c2565b60405180910390fd5b5050565b6000801b81565b6002602052806000526040600020600091509050806000018054612d7c906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054612da8906148f1565b8015612df55780601f10612dca57610100808354040283529160200191612df5565b820191906000526020600020905b815481529060010190602001808311612dd857829003601f168201915b505050505090806001018054612e0a906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054612e36906148f1565b8015612e835780601f10612e5857610100808354040283529160200191612e83565b820191906000526020600020905b815481529060010190602001808311612e6657829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b7f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f612eca8161376d565b600060076000815480929190612edf906152e2565b919050559050600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060e001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018581526020014281526020016000151581525090806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301908161305c9190614ace565b5060808201518160040190816130729190614ace565b5060a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16827fc0d9df9d6d8acee28356fcc24c0de4597104943515c4c0b12fb3d6b1ca74b0ee60405160405180910390a45050505050565b7f72606200fac42b7dc86b75901d61ecfab2a4a1a6eded478b97a428094891abed81565b7fc2d498fa6734073871a6dde33c56174c52423804118e0d5b66171fad3494de6881565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156133db57838290600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054613293906148f1565b80601f01602080910402602001604051908101604052809291908181526020018280546132bf906148f1565b801561330c5780601f106132e15761010080835404028352916020019161330c565b820191906000526020600020905b8154815290600101906020018083116132ef57829003601f168201915b50505050508152602001600482018054613325906148f1565b80601f0160208091040260200160405190810160405280929190818152602001828054613351906148f1565b801561339e5780601f106133735761010080835404028352916020019161339e565b820191906000526020600020905b81548152906001019060200180831161338157829003601f168201915b50505050508152602001600582015481526020016006820160009054906101000a900460ff161515151581525050815260200190600101906131aa565b505050509050919050565b6000600980549050905090565b6133fc8261128f565b6134058161376d565b61340f83836137f3565b8173ffffffffffffffffffffffffffffffffffffffff16837fcfb95b05744d1dc2a42dc08bf4bd2ed68f381aeac3c9b1a6250a6120e236ba8860405160405180910390a3505050565b606060088054806020026020016040519081016040528092919081815260200182805480156134dc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613492575b5050505050905090565b600d5481565b7f0af1dac7dea2fd7f7738119cec7df099dfad49aa9d2e7d17ba6b60f63ae7411f81565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480613583575061358282613815565b5b9050919050565b6000613596838361279d565b1561367157600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061360e613781565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050613676565b600090505b92915050565b6000613688838361279d565b61376257600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506136ff613781565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050613767565b600090505b92915050565b61377e81613779613781565b61387f565b50565b600033905090565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6137fc8261128f565b6138058161376d565b61380f838361358a565b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b613889828261279d565b6138cc5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016138c392919061532a565b60405180910390fd5b5050565b6040518060a00160405280606081526020016000815260200160608152602001606081526020016000151581525090565b604051806060016040528060608152602001606081526020016000151581525090565b508054613930906148f1565b6000825580601f106139425750613961565b601f0160209004906000526020600020908101906139609190613964565b5b50565b5b8082111561397d576000816000905550600101613965565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6139ca81613995565b81146139d557600080fd5b50565b6000813590506139e7816139c1565b92915050565b600060208284031215613a0357613a0261398b565b5b6000613a11848285016139d8565b91505092915050565b60008115159050919050565b613a2f81613a1a565b82525050565b6000602082019050613a4a6000830184613a26565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613a7b82613a50565b9050919050565b613a8b81613a70565b8114613a9657600080fd5b50565b600081359050613aa881613a82565b92915050565b600060208284031215613ac457613ac361398b565b5b6000613ad284828501613a99565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613b2e82613ae5565b810181811067ffffffffffffffff82111715613b4d57613b4c613af6565b5b80604052505050565b6000613b60613981565b9050613b6c8282613b25565b919050565b600067ffffffffffffffff821115613b8c57613b8b613af6565b5b613b9582613ae5565b9050602081019050919050565b82818337600083830152505050565b6000613bc4613bbf84613b71565b613b56565b905082815260208101848484011115613be057613bdf613ae0565b5b613beb848285613ba2565b509392505050565b600082601f830112613c0857613c07613adb565b5b8135613c18848260208601613bb1565b91505092915050565b600080600060608486031215613c3a57613c3961398b565b5b6000613c4886828701613a99565b935050602084013567ffffffffffffffff811115613c6957613c68613990565b5b613c7586828701613bf3565b925050604084013567ffffffffffffffff811115613c9657613c95613990565b5b613ca286828701613bf3565b9150509250925092565b6000819050919050565b613cbf81613cac565b8114613cca57600080fd5b50565b600081359050613cdc81613cb6565b92915050565b600060208284031215613cf857613cf761398b565b5b6000613d0684828501613ccd565b91505092915050565b613d1881613a70565b82525050565b6000602082019050613d336000830184613d0f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613d73578082015181840152602081019050613d58565b60008484015250505050565b6000613d8a82613d39565b613d948185613d44565b9350613da4818560208601613d55565b613dad81613ae5565b840191505092915050565b613dc181613cac565b82525050565b600060a0820190508181036000830152613de18188613d7f565b9050613df06020830187613db8565b8181036040830152613e028186613d7f565b90508181036060830152613e168185613d7f565b9050613e256080830184613a26565b9695505050505050565b6000819050919050565b613e4281613e2f565b8114613e4d57600080fd5b50565b600081359050613e5f81613e39565b92915050565b600060208284031215613e7b57613e7a61398b565b5b6000613e8984828501613e50565b91505092915050565b613e9b81613e2f565b82525050565b6000602082019050613eb66000830184613e92565b92915050565b600082825260208201905092915050565b6000613ed882613d39565b613ee28185613ebc565b9350613ef2818560208601613d55565b613efb81613ae5565b840191505092915050565b613f0f81613cac565b82525050565b613f1e81613a1a565b82525050565b600060a0830160008301518482036000860152613f418282613ecd565b9150506020830151613f566020860182613f06565b5060408301518482036040860152613f6e8282613ecd565b91505060608301518482036060860152613f888282613ecd565b9150506080830151613f9d6080860182613f15565b508091505092915050565b60006020820190508181036000830152613fc28184613f24565b905092915050565b60008060408385031215613fe157613fe061398b565b5b6000613fef85828601613e50565b925050602061400085828601613a99565b9150509250929050565b600080600080600060a086880312156140265761402561398b565b5b600061403488828901613a99565b955050602086013567ffffffffffffffff81111561405557614054613990565b5b61406188828901613bf3565b945050604061407288828901613ccd565b935050606086013567ffffffffffffffff81111561409357614092613990565b5b61409f88828901613bf3565b925050608086013567ffffffffffffffff8111156140c0576140bf613990565b5b6140cc88828901613bf3565b9150509295509295909350565b600080fd5b600080fd5b60008083601f8401126140f9576140f8613adb565b5b8235905067ffffffffffffffff811115614116576141156140d9565b5b602083019150836001820283011115614132576141316140de565b5b9250929050565b600080602083850312156141505761414f61398b565b5b600083013567ffffffffffffffff81111561416e5761416d613990565b5b61417a858286016140e3565b92509250509250929050565b600060208201905081810360008301526141a08184613d7f565b905092915050565b60006020820190506141bd6000830184613db8565b92915050565b600060608301600083015184820360008601526141e08282613ecd565b915050602083015184820360208601526141fa8282613ecd565b915050604083015161420f6040860182613f15565b508091505092915050565b6000602082019050818103600083015261423481846141c3565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61427181613a70565b82525050565b60006142838383614268565b60208301905092915050565b6000602082019050919050565b60006142a78261423c565b6142b18185614247565b93506142bc83614258565b8060005b838110156142ed5781516142d48882614277565b97506142df8361428f565b9250506001810190506142c0565b5085935050505092915050565b60006020820190508181036000830152614314818461429c565b905092915050565b600067ffffffffffffffff82111561433757614336613af6565b5b61434082613ae5565b9050602081019050919050565b600061436061435b8461431c565b613b56565b90508281526020810184848401111561437c5761437b613ae0565b5b614387848285613ba2565b509392505050565b600082601f8301126143a4576143a3613adb565b5b81356143b484826020860161434d565b91505092915050565b600080604083850312156143d4576143d361398b565b5b60006143e285828601613ccd565b925050602083013567ffffffffffffffff81111561440357614402613990565b5b61440f8582860161438f565b9150509250929050565b600060608201905081810360008301526144338186613d7f565b905081810360208301526144478185613d7f565b90506144566040830184613a26565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060e0830160008301516144a26000860182613f06565b5060208301516144b56020860182614268565b5060408301516144c86040860182614268565b50606083015184820360608601526144e08282613ecd565b915050608083015184820360808601526144fa8282613ecd565b91505060a083015161450f60a0860182613f06565b5060c083015161452260c0860182613f15565b508091505092915050565b6000614539838361448a565b905092915050565b6000602082019050919050565b60006145598261445e565b6145638185614469565b9350836020820285016145758561447a565b8060005b858110156145b15784840389528151614592858261452d565b945061459d83614541565b925060208a01995050600181019050614579565b50829750879550505050505092915050565b600060208201905081810360008301526145dd818461454e565b905092915050565b7f43616c6c6572206973206e6f7420616e2041646d696e00000000000000000000600082015250565b600061461b601683613d44565b9150614626826145e5565b602082019050919050565b6000602082019050818103600083015261464a8161460e565b9050919050565b7f436f6e7472616374207061757365640000000000000000000000000000000000600082015250565b6000614687600f83613d44565b915061469282614651565b602082019050919050565b600060208201905081810360008301526146b68161467a565b9050919050565b7f4e6f7420616e2061637469766520646f63746f72000000000000000000000000600082015250565b60006146f3601483613d44565b91506146fe826146bd565b602082019050919050565b60006020820190508181036000830152614722816146e6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061476382613cac565b915061476e83613cac565b925082820390508181111561478657614785614729565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f496e76616c696420416464726573730000000000000000000000000000000000600082015250565b6000614820600f83613d44565b915061482b826147ea565b602082019050919050565b6000602082019050818103600083015261484f81614813565b9050919050565b7f506861726d616369737420616c72656164792052656769737465726564000000600082015250565b600061488c601d83613d44565b915061489782614856565b602082019050919050565b600060208201905081810360008301526148bb8161487f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061490957607f821691505b60208210810361491c5761491b6148c2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026149847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614947565b61498e8683614947565b95508019841693508086168417925050509392505050565b6000819050919050565b60006149cb6149c66149c184613cac565b6149a6565b613cac565b9050919050565b6000819050919050565b6149e5836149b0565b6149f96149f1826149d2565b848454614954565b825550505050565b600090565b614a0e614a01565b614a198184846149dc565b505050565b5b81811015614a3d57614a32600082614a06565b600181019050614a1f565b5050565b601f821115614a8257614a5381614922565b614a5c84614937565b81016020851015614a6b578190505b614a7f614a7785614937565b830182614a1e565b50505b505050565b600082821c905092915050565b6000614aa560001984600802614a87565b1980831691505092915050565b6000614abe8383614a94565b9150826002028217905092915050565b614ad782613d39565b67ffffffffffffffff811115614af057614aef613af6565b5b614afa82546148f1565b614b05828285614a41565b600060209050601f831160018114614b385760008415614b26578287015190505b614b308582614ab2565b865550614b98565b601f198416614b4686614922565b60005b82811015614b6e57848901518255600182019150602085019450602081019050614b49565b86831015614b8b5784890151614b87601f891682614a94565b8355505b6001600288020188555050505b505050505050565b7f506861726d6163697374206e6f74207265676973746572656400000000000000600082015250565b6000614bd6601983613d44565b9150614be182614ba0565b602082019050919050565b60006020820190508181036000830152614c0581614bc9565b9050919050565b7f506861726d6163697374206e6f74207665726966696564000000000000000000600082015250565b6000614c42601783613d44565b9150614c4d82614c0c565b602082019050919050565b60006020820190508181036000830152614c7181614c35565b9050919050565b7f4c6963656e736520457870697265640000000000000000000000000000000000600082015250565b6000614cae600f83613d44565b9150614cb982614c78565b602082019050919050565b60006020820190508181036000830152614cdd81614ca1565b9050919050565b7f496e76616c6964204c6963656e73650000000000000000000000000000000000600082015250565b6000614d1a600f83613d44565b9150614d2582614ce4565b602082019050919050565b60006020820190508181036000830152614d4981614d0d565b9050919050565b7f4e616d6520726571756972656400000000000000000000000000000000000000600082015250565b6000614d86600d83613d44565b9150614d9182614d50565b602082019050919050565b60006020820190508181036000830152614db581614d79565b9050919050565b7f5370656369616c697a6174696f6e207265717569726564000000000000000000600082015250565b6000614df2601783613d44565b9150614dfd82614dbc565b602082019050919050565b60006020820190508181036000830152614e2181614de5565b9050919050565b7f446f63746f7220616c7265616479207265676973746572656400000000000000600082015250565b6000614e5e601983613d44565b9150614e6982614e28565b602082019050919050565b60006020820190508181036000830152614e8d81614e51565b9050919050565b60006040820190508181036000830152614eae8185613d7f565b9050614ebd6020830184613db8565b9392505050565b600082905092915050565b614ed98383614ec4565b67ffffffffffffffff811115614ef257614ef1613af6565b5b614efc82546148f1565b614f07828285614a41565b6000601f831160018114614f365760008415614f24578287013590505b614f2e8582614ab2565b865550614f96565b601f198416614f4486614922565b60005b82811015614f6c57848901358255600182019150602085019450602081019050614f47565b86831015614f895784890135614f85601f891682614a94565b8355505b6001600288020188555050505b50505050505050565b6000614fab8385613d44565b9350614fb8838584613ba2565b614fc183613ae5565b840190509392505050565b60006020820190508181036000830152614fe7818486614f9f565b90509392505050565b6000614ffb82613cac565b915061500683613cac565b925082820261501481613cac565b9150828204841483151761502b5761502a614729565b5b5092915050565b600061503d82613cac565b915061504883613cac565b92508282019050808211156150605761505f614729565b5b92915050565b7f4e6f206163636573730000000000000000000000000000000000000000000000600082015250565b600061509c600983613d44565b91506150a782615066565b602082019050919050565b600060208201905081810360008301526150cb8161508f565b9050919050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b6000615108601283613d44565b9150615113826150d2565b602082019050919050565b60006020820190508181036000830152615137816150fb565b9050919050565b600081519050919050565b60008190508160005260206000209050919050565b601f82111561519f5761517081615149565b61517984614937565b81016020851015615188578190505b61519c61519485614937565b830182614a1e565b50505b505050565b6151ad8261513e565b67ffffffffffffffff8111156151c6576151c5613af6565b5b6151d082546148f1565b6151db82828561515e565b600060209050601f83116001811461520e57600084156151fc578287015190505b6152068582614ab2565b86555061526e565b601f19841661521c86615149565b60005b828110156152445784890151825560018201915060208501945060208101905061521f565b86831015615261578489015161525d601f891682614a94565b8355505b6001600288020188555050505b505050505050565b7f52657175657374206e6f7420666f756e64000000000000000000000000000000600082015250565b60006152ac601183613d44565b91506152b782615276565b602082019050919050565b600060208201905081810360008301526152db8161529f565b9050919050565b60006152ed82613cac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361531f5761531e614729565b5b600182019050919050565b600060408201905061533f6000830185613d0f565b61534c6020830184613e92565b939250505056fea2646970667358221220efda5c290161622894bad05552ab52e7e42b839bebc1cd90fcf345cdae823d5f64736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "AccessControlBadConfirmation()": [
        {
          "details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
        }
      ],
      "AccessControlUnauthorizedAccount(address,bytes32)": [
        {
          "details": "The `account` is missing a role."
        }
      ]
    },
    "events": {
      "RoleAdminChanged(bytes32,bytes32,bytes32)": {
        "details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
      },
      "RoleGranted(bytes32,address,address)": {
        "details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
      },
      "RoleRevoked(bytes32,address,address)": {
        "details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
      }
    },
    "kind": "dev",
    "methods": {
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "_roles",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
      },
      {
        "astId": 6955,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "doctorRegistry",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(DoctorProfile)7882_storage)"
      },
      {
        "astId": 6960,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pharmacistRegistry",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_struct(PharmacistProfile)7889_storage)"
      },
      {
        "astId": 6964,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "patientRegistry",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6968,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "patientDataCIDs",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 6974,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "accessRequests",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(AccessRequest)7912_storage)dyn_storage)"
      },
      {
        "astId": 6980,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "accessKeys",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bytes_storage))"
      },
      {
        "astId": 6982,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "nextRequestId",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 6985,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "doctorList",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6988,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pharmacistList",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 6992,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "doctorIndex",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6996,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pharmacistIndex",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 6998,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "emergencyPause",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 7000,
        "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
        "label": "pauseExpiry",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(AccessRequest)7912_storage)dyn_storage": {
        "base": "t_struct(AccessRequest)7912_storage",
        "encoding": "dynamic_array",
        "label": "struct IMedicalAccess.AccessRequest[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(AccessRequest)7912_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IMedicalAccess.AccessRequest[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(AccessRequest)7912_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bytes_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bytes))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bytes_storage)"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_address,t_struct(DoctorProfile)7882_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IMedicalAccess.DoctorProfile)",
        "numberOfBytes": "32",
        "value": "t_struct(DoctorProfile)7882_storage"
      },
      "t_mapping(t_address,t_struct(PharmacistProfile)7889_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IMedicalAccess.PharmacistProfile)",
        "numberOfBytes": "32",
        "value": "t_struct(PharmacistProfile)7889_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)21_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AccessRequest)7912_storage": {
        "encoding": "inplace",
        "label": "struct IMedicalAccess.AccessRequest",
        "members": [
          {
            "astId": 7899,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7901,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "doctor",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 7903,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "patient",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 7905,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "doctorName",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 7907,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "hospital",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 7909,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "timestamp",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 7911,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "fulfilled",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(DoctorProfile)7882_storage": {
        "encoding": "inplace",
        "label": "struct IMedicalAccess.DoctorProfile",
        "members": [
          {
            "astId": 7873,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "licenseHash",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7875,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "expiryDate",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7877,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 7879,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "specialization",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 7881,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "isActive",
            "offset": 0,
            "slot": "4",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(PharmacistProfile)7889_storage": {
        "encoding": "inplace",
        "label": "struct IMedicalAccess.PharmacistProfile",
        "members": [
          {
            "astId": 7884,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "pharmacyId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7886,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "pharmacyName",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 7888,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "isVerified",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(RoleData)21_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "hasRole",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 20,
            "contract": "contracts/access/MedicalAccess.sol:MedicalAccess",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}