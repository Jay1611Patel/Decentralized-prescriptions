{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [],
  "transactionHash": "0xba814adabe38526f392208616b3c071e0608d61f17d836de5116729bde8a7609",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1923684",
    "logsBloom": "0x
    "blockHash": "0xfd2e24adb40b2a5efd3486c9b50f169d643b85495457828f95d9e4d353d80ff3",
    "transactionHash": "0xba814adabe38526f392208616b3c071e0608d61f17d836de5116729bde8a7609",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1923684",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "59ae38f1cb551820bd93d3d8a232d5e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PermissionsLib.sol\":\"PermissionsLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMedicalAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\ninterface IMedicalAccess {\\n    struct AccessPermission {\\n        uint256 requestId;\\n        address doctor;\\n        address patient;\\n        uint256 expiryTime;\\n        string[] dataFields; // e.g., [\\\"name\\\", \\\"dob\\\", \\\"allergies\\\"]\\n        bool isActive;\\n    }\\n\\n    // Struct Definitions\\n    struct DoctorProfile {\\n        string licenseHash;\\n        uint256 expiryDate;\\n        string name;\\n        string specialization;\\n        bool isActive;\\n    }\\n\\n    struct PharmacistProfile {\\n        string pharmacyId;\\n        string pharmacyName;\\n        bool isVerified;\\n    }\\n\\n    // Events\\n    event DoctorRegistered(\\n        address indexed doctor,\\n        string licenseHash,\\n        uint256 expiry\\n    );\\n\\n    struct AccessRequest {\\n        uint256 id;\\n        address doctor;\\n        address patient;\\n        string doctorName;\\n        string hospital;\\n        uint256 timestamp;\\n        bool fulfilled;\\n    }\\n\\n    event DoctorUpdated(address indexed doctor);\\n    event DoctorRevoked(address indexed doctor);\\n    event PharmacistRegistered(address indexed pharmacist, string pharmacyId);\\n    event PharmacistRevoked(address indexed pharmacist);\\n    event PatientRegistered(address indexed account);\\n    event PauseToggled(bool isPaused);\\n    event RoleRevokedWithSender(bytes32 indexed role, address indexed account);\\n    event DataStored(address indexed patient, string cid);\\n    event AccessRequested(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessApproved(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessRevoked(address indexed doctor, address indexed patient);\\n    event TemporaryAccessGranted(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient,\\n        uint256 expiryTime,\\n        string[] dataFields\\n    );\\n    event AccessExtended(uint256 indexed requestId, uint256 newExpiry);\\n    event AccessRevokedEarly(uint256 indexed requestId);\\n\\n    // Role Constants\\n    function DOCTOR_ROLE() external pure returns (bytes32);\\n\\n    function PHARMACIST_ROLE() external pure returns (bytes32);\\n\\n    function ADMIN_ROLE() external pure returns (bytes32);\\n\\n    function PATIENT_ROLE() external view returns (bytes32);\\n\\n    // Role Verification\\n    function isActive(address doctorAddress) external view returns (bool);\\n\\n    function isVerifiedPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (bool);\\n\\n    function hasRole(\\n        bytes32 role,\\n        address account\\n    ) external view returns (bool);\\n\\n    function requestAccess(\\n        address patient,\\n        string memory doctorName,\\n        string memory hospital\\n    ) external;\\n\\n    function approveAccess(\\n        uint256 requestId,\\n        bytes memory encryptedKey\\n    ) external;\\n\\n    function revokeAccess(address doctor) external;\\n\\n    function storeDataCID(string calldata cid) external;\\n\\n    function grantTemporaryAccess(\\n        address doctor,\\n        string[] calldata dataFields,\\n        uint256 duration\\n    ) external;\\n\\n    function extendAccess(\\n        uint256 requestId,\\n        address doctor,\\n        uint256 additionalDuration\\n    ) external;\\n\\n    function revokeAccessEarly(uint256 requestId, address doctor) external;\\n\\n    // Getters\\n    function getDoctor(\\n        address doctorAddress\\n    ) external view returns (DoctorProfile memory);\\n\\n    function getPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (PharmacistProfile memory);\\n\\n    function getAllDoctors() external view returns (address[] memory);\\n\\n    function getAllPharmacists() external view returns (address[] memory);\\n\\n    function getDoctorCount() external view returns (uint256);\\n\\n    function getPharmacistCount() external view returns (uint256);\\n\\n    function getPatientPermissions()\\n        external\\n        view\\n        returns (AccessPermission[] memory);\\n\\n    function getDoctorAccess()\\n        external\\n        view\\n        returns (AccessPermission[] memory);\\n\\n    // Registration Functions\\n    function registerDoctor(\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external;\\n\\n    function revokeDoctor(address doctorAddress) external;\\n\\n    function registerPharmacist(\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external;\\n\\n    function revokePharmacist(address pharmacistAddress) external;\\n\\n    function registerPatient() external;\\n\\n    // function renewDoctorLicense(\\n    //     address doctorAddress,\\n    //     uint256 newExpiry\\n    // ) external;\\n\\n    // System Controls\\n    function togglePause(uint256 durationHours) external;\\n\\n    function getPatientCID(\\n        address patient\\n    ) external view returns (string memory);\\n\\n    function getAccessRequests(\\n        address patient\\n    ) external view returns (AccessRequest[] memory);\\n\\n    function emergencyPause() external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc70c3983299fe91f7704c26469e5d9f11c89f154d8322dee6782fe4ab7dcb6b1\",\"license\":\"MIT\"},\"contracts/libraries/PermissionsLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\nimport \\\"../interfaces/IMedicalAccess.sol\\\";\\n\\nlibrary PermissionsLib {\\n    struct AccessPermissionStorage {\\n        mapping(address => IMedicalAccess.AccessPermission[]) patientPermissions;\\n        mapping(address => IMedicalAccess.AccessPermission[]) doctorPermissions;\\n        uint256 nextRequestId;\\n    }\\n\\n    function grantTemporaryAccess(\\n        AccessPermissionStorage storage self,\\n        address doctor,\\n        address patient,\\n        string[] calldata dataFields,\\n        uint256 duration\\n    ) external returns (uint256 requestId) {\\n        requestId = self.nextRequestId++;\\n        uint256 expiryTime = block.timestamp + duration;\\n\\n        IMedicalAccess.AccessPermission memory permission = IMedicalAccess\\n            .AccessPermission({\\n                requestId: requestId,\\n                doctor: doctor,\\n                patient: patient,\\n                expiryTime: expiryTime,\\n                dataFields: dataFields,\\n                isActive: true\\n            });\\n        self.doctorPermissions[doctor].push(permission);\\n        self.patientPermissions[patient].push(permission);\\n    }\\n\\n    function extendAccess(\\n        AccessPermissionStorage storage self,\\n        address doctor,\\n        address patient,\\n        uint256 requestId,\\n        uint256 additionalDuration\\n    ) external {\\n        bool found;\\n        IMedicalAccess.AccessPermission[] storage doctorPerms = self\\n            .doctorPermissions[doctor];\\n        for (uint i = 0; i < doctorPerms.length; i++) {\\n            if (\\n                doctorPerms[i].requestId == requestId &&\\n                doctorPerms[i].patient == patient\\n            ) {\\n                require(doctorPerms[i].isActive, \\\"Permission not active\\\");\\n                doctorPerms[i].expiryTime += additionalDuration;\\n                found = true;\\n                break;\\n            }\\n        }\\n\\n        IMedicalAccess.AccessPermission[] storage patientPerms = self\\n            .patientPermissions[patient];\\n        for (uint i = 0; i < patientPerms.length; i++) {\\n            if (\\n                patientPerms[i].requestId == requestId &&\\n                patientPerms[i].doctor == doctor\\n            ) {\\n                require(patientPerms[i].isActive, \\\"Permission not active\\\");\\n                patientPerms[i].expiryTime += additionalDuration;\\n                break;\\n            }\\n        }\\n\\n        if (!found) revert(\\\"Permission not found\\\");\\n    }\\n\\n    function revokeAccessEarly(\\n        AccessPermissionStorage storage self,\\n        address doctor,\\n        address patient,\\n        uint256 requestId\\n    ) external {\\n        bool found;\\n\\n        // Doctor's permissions\\n        IMedicalAccess.AccessPermission[] storage doctorPerms = self\\n            .doctorPermissions[doctor];\\n        for (uint i = 0; i < doctorPerms.length; i++) {\\n            if (\\n                doctorPerms[i].requestId == requestId &&\\n                doctorPerms[i].patient == patient\\n            ) {\\n                require(doctorPerms[i].isActive, \\\"Permission not active\\\");\\n                doctorPerms[i].isActive = false;\\n                found = true;\\n                break;\\n            }\\n        }\\n\\n        // Patient's permissions\\n        IMedicalAccess.AccessPermission[] storage patientPerms = self\\n            .patientPermissions[patient];\\n        for (uint i = 0; i < patientPerms.length; i++) {\\n            if (\\n                patientPerms[i].requestId == requestId &&\\n                patientPerms[i].doctor == doctor\\n            ) {\\n                require(patientPerms[i].isActive, \\\"Permission not active\\\");\\n                patientPerms[i].isActive = false;\\n                break;\\n            }\\n        }\\n\\n        if (!found) revert(\\\"Permission not found\\\");\\n    }\\n\\n    function getDoctorAccess(\\n        AccessPermissionStorage storage self,\\n        address doctor\\n    ) external view returns (IMedicalAccess.AccessPermission[] memory) {\\n        IMedicalAccess.AccessPermission[] storage all = self.doctorPermissions[\\n            doctor\\n        ];\\n        uint256 activeCount = 0;\\n\\n        for (uint i = 0; i < all.length; i++) {\\n            if (all[i].isActive && all[i].expiryTime > block.timestamp) {\\n                activeCount++;\\n            }\\n        }\\n\\n        IMedicalAccess.AccessPermission[]\\n            memory result = new IMedicalAccess.AccessPermission[](activeCount);\\n        uint256 index = 0;\\n\\n        for (uint i = 0; i < all.length; i++) {\\n            if (all[i].isActive && all[i].expiryTime > block.timestamp) {\\n                result[index] = all[i];\\n                index++;\\n            }\\n        }\\n\\n        return result;\\n    }\\n\\n    function getPatientPermissions(\\n        AccessPermissionStorage storage self,\\n        address patient\\n    ) external view returns (IMedicalAccess.AccessPermission[] memory) {\\n        IMedicalAccess.AccessPermission[] storage all = self.patientPermissions[\\n            patient\\n        ];\\n        uint256 activeCount = 0;\\n\\n        for (uint i = 0; i < all.length; i++) {\\n            if (all[i].isActive && all[i].expiryTime > block.timestamp) {\\n                activeCount++;\\n            }\\n        }\\n\\n        IMedicalAccess.AccessPermission[]\\n            memory result = new IMedicalAccess.AccessPermission[](activeCount);\\n        uint256 index = 0;\\n\\n        for (uint i = 0; i < all.length; i++) {\\n            if (all[i].isActive && all[i].expiryTime > block.timestamp) {\\n                result[index] = all[i];\\n                index++;\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x758ec1541ad0b0ab209c5882968efd16c8bb1275a7057646c98e841b92a24d36\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6121e9610052600b82828239805160001a6073146045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063307f8716146100665780634f6601e014610096578063566a0d12146100d35780635af18050146100fc578063682ff3211461012c575b600080fd5b610080600480360381019061007b91906115a1565b610155565b60405161008d91906118c1565b60405180910390f35b8180156100a257600080fd5b506100bd60048036038101906100b89190611974565b610525565b6040516100ca9190611a1d565b60405180910390f35b8180156100df57600080fd5b506100fa60048036038101906100f59190611a38565b610862565b005b610116600480360381019061011191906115a1565b610c28565b60405161012391906118c1565b60405180910390f35b81801561013857600080fd5b50610153600480360381019061014e9190611a9f565b610ff8565b005b606060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b828054905081101561022e578281815481106101bf576101be611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16801561020d5750428382815481106101f9576101f8611b1a565b5b906000526020600020906006020160030154115b1561022157818061021d90611b78565b9250505b80806001019150506101a0565b5060008167ffffffffffffffff81111561024b5761024a611bc0565b5b60405190808252806020026020018201604052801561028457816020015b6102716113bb565b8152602001906001900390816102695790505b5090506000805b8480549050811015610517578481815481106102aa576102a9611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff1680156102f85750428582815481106102e4576102e3611b1a565b5b906000526020600020906006020160030154115b1561050a578481815481106103105761030f611b1a565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156104ba57838290600052602060002001805461042d90611c1e565b80601f016020809104026020016040519081016040528092919081815260200182805461045990611c1e565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b50505050508152602001906001019061040e565b5050505081526020016005820160009054906101000a900460ff1615151515815250508383815181106104f0576104ef611b1a565b5b6020026020010181905250818061050690611b78565b9250505b808060010191505061028b565b508194505050505092915050565b600086600201600081548092919061053c90611b78565b919050559050600082426105509190611c4f565b905060006040518060c001604052808481526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018787906105b09190611e37565b81526020016001151581525090508860010160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040190805190602001906106e792919061141f565b5060a08201518160050160006101000a81548160ff02191690831515021790555050508860000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401908051906020019061083392919061141f565b5060a08201518160050160006101000a81548160ff021916908315150217905550505050509695505050505050565b6000808560010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610a2257838282815481106108cb576108ca611b1a565b5b90600052602060002090600602016000015414801561095957508473ffffffffffffffffffffffffffffffffffffffff1682828154811061090f5761090e611b1a565b5b906000526020600020906006020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610a155781818154811061097157610970611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff166109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c690611ea9565b60405180910390fd5b60008282815481106109e4576109e3611b1a565b5b906000526020600020906006020160050160006101000a81548160ff02191690831515021790555060019250610a22565b80806001019150506108ab565b5060008660000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610bde5784828281548110610a8b57610a8a611b1a565b5b906000526020600020906006020160000154148015610b1957508673ffffffffffffffffffffffffffffffffffffffff16828281548110610acf57610ace611b1a565b5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610bd157818181548110610b3157610b30611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16610b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8690611ea9565b60405180910390fd5b6000828281548110610ba457610ba3611b1a565b5b906000526020600020906006020160050160006101000a81548160ff021916908315150217905550610bde565b8080600101915050610a6b565b5082610c1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1690611f15565b60405180910390fd5b50505050505050565b606060008360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b8280549050811015610d0157828181548110610c9257610c91611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff168015610ce0575042838281548110610ccc57610ccb611b1a565b5b906000526020600020906006020160030154115b15610cf4578180610cf090611b78565b9250505b8080600101915050610c73565b5060008167ffffffffffffffff811115610d1e57610d1d611bc0565b5b604051908082528060200260200182016040528015610d5757816020015b610d446113bb565b815260200190600190039081610d3c5790505b5090506000805b8480549050811015610fea57848181548110610d7d57610d7c611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff168015610dcb575042858281548110610db757610db6611b1a565b5b906000526020600020906006020160030154115b15610fdd57848181548110610de357610de2611b1a565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610f8d578382906000526020600020018054610f0090611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2c90611c1e565b8015610f795780601f10610f4e57610100808354040283529160200191610f79565b820191906000526020600020905b815481529060010190602001808311610f5c57829003601f168201915b505050505081526020019060010190610ee1565b5050505081526020016005820160009054906101000a900460ff161515151581525050838381518110610fc357610fc2611b1a565b5b60200260200101819052508180610fd990611b78565b9250505b8080600101915050610d5e565b508194505050505092915050565b6000808660010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b81805490508110156111b6578482828154811061106157611060611b1a565b5b9060005260206000209060060201600001541480156110ef57508573ffffffffffffffffffffffffffffffffffffffff168282815481106110a5576110a4611b1a565b5b906000526020600020906006020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156111a95781818154811061110757611106611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c90611ea9565b60405180910390fd5b8382828154811061117957611178611b1a565b5b906000526020600020906006020160030160008282546111999190611c4f565b92505081905550600192506111b6565b8080600101915050611041565b5060008760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015611370578582828154811061121f5761121e611b1a565b5b9060005260206000209060060201600001541480156112ad57508773ffffffffffffffffffffffffffffffffffffffff1682828154811061126357611262611b1a565b5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611363578181815481106112c5576112c4611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131a90611ea9565b60405180910390fd5b8482828154811061133757611336611b1a565b5b906000526020600020906006020160030160008282546113579190611c4f565b92505081905550611370565b80806001019150506111ff565b50826113b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a890611f15565b60405180910390fd5b5050505050505050565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081526020016000151581525090565b828054828255906000526020600020908101928215611467579160200282015b8281111561146657825182908161145691906120e1565b509160200191906001019061143f565b5b5090506114749190611478565b5090565b5b80821115611498576000818161148f919061149c565b50600101611479565b5090565b5080546114a890611c1e565b6000825580601f106114ba57506114d9565b601f0160209004906000526020600020908101906114d891906114dc565b5b50565b5b808211156114f55760008160009055506001016114dd565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6115208161150d565b811461152b57600080fd5b50565b60008135905061153d81611517565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061156e82611543565b9050919050565b61157e81611563565b811461158957600080fd5b50565b60008135905061159b81611575565b92915050565b600080604083850312156115b8576115b7611503565b5b60006115c68582860161152e565b92505060206115d78582860161158c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6116208161160d565b82525050565b61162f81611563565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561169b578082015181840152602081019050611680565b60008484015250505050565b6000601f19601f8301169050919050565b60006116c382611661565b6116cd818561166c565b93506116dd81856020860161167d565b6116e6816116a7565b840191505092915050565b60006116fd83836116b8565b905092915050565b6000602082019050919050565b600061171d82611635565b6117278185611640565b93508360208202850161173985611651565b8060005b85811015611775578484038952815161175685826116f1565b945061176183611705565b925060208a0199505060018101905061173d565b50829750879550505050505092915050565b60008115159050919050565b61179c81611787565b82525050565b600060c0830160008301516117ba6000860182611617565b5060208301516117cd6020860182611626565b5060408301516117e06040860182611626565b5060608301516117f36060860182611617565b506080830151848203608086015261180b8282611712565b91505060a083015161182060a0860182611793565b508091505092915050565b600061183783836117a2565b905092915050565b6000602082019050919050565b6000611857826115e1565b61186181856115ec565b935083602082028501611873856115fd565b8060005b858110156118af5784840389528151611890858261182b565b945061189b8361183f565b925060208a01995050600181019050611877565b50829750879550505050505092915050565b600060208201905081810360008301526118db818461184c565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611908576119076118e3565b5b8235905067ffffffffffffffff811115611925576119246118e8565b5b602083019150836020820283011115611941576119406118ed565b5b9250929050565b6119518161160d565b811461195c57600080fd5b50565b60008135905061196e81611948565b92915050565b60008060008060008060a0878903121561199157611990611503565b5b600061199f89828a0161152e565b96505060206119b089828a0161158c565b95505060406119c189828a0161158c565b945050606087013567ffffffffffffffff8111156119e2576119e1611508565b5b6119ee89828a016118f2565b93509350506080611a0189828a0161195f565b9150509295509295509295565b611a178161160d565b82525050565b6000602082019050611a326000830184611a0e565b92915050565b60008060008060808587031215611a5257611a51611503565b5b6000611a608782880161152e565b9450506020611a718782880161158c565b9350506040611a828782880161158c565b9250506060611a938782880161195f565b91505092959194509250565b600080600080600060a08688031215611abb57611aba611503565b5b6000611ac98882890161152e565b9550506020611ada8882890161158c565b9450506040611aeb8882890161158c565b9350506060611afc8882890161195f565b9250506080611b0d8882890161195f565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b838261160d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611bb557611bb4611b49565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c3657607f821691505b602082108103611c4957611c48611bef565b5b50919050565b6000611c5a8261160d565b9150611c658361160d565b9250828201905080821115611c7d57611c7c611b49565b5b92915050565b611c8c826116a7565b810181811067ffffffffffffffff82111715611cab57611caa611bc0565b5b80604052505050565b6000611cbe6114f9565b9050611cca8282611c83565b919050565b600067ffffffffffffffff821115611cea57611ce9611bc0565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff821115611d1b57611d1a611bc0565b5b611d24826116a7565b9050602081019050919050565b82818337600083830152505050565b6000611d53611d4e84611d00565b611cb4565b905082815260208101848484011115611d6f57611d6e611cfb565b5b611d7a848285611d31565b509392505050565b600082601f830112611d9757611d966118e3565b5b8135611da7848260208601611d40565b91505092915050565b6000611dc3611dbe84611ccf565b611cb4565b90508083825260208201905060208402830185811115611de657611de56118ed565b5b835b81811015611e2d57803567ffffffffffffffff811115611e0b57611e0a6118e3565b5b808601611e188982611d82565b85526020850194505050602081019050611de8565b5050509392505050565b6000611e44368484611db0565b905092915050565b600082825260208201905092915050565b7f5065726d697373696f6e206e6f74206163746976650000000000000000000000600082015250565b6000611e93601583611e4c565b9150611e9e82611e5d565b602082019050919050565b60006020820190508181036000830152611ec281611e86565b9050919050565b7f5065726d697373696f6e206e6f7420666f756e64000000000000000000000000600082015250565b6000611eff601483611e4c565b9150611f0a82611ec9565b602082019050919050565b60006020820190508181036000830152611f2e81611ef2565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611f977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f5a565b611fa18683611f5a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611fde611fd9611fd48461160d565b611fb9565b61160d565b9050919050565b6000819050919050565b611ff883611fc3565b61200c61200482611fe5565b848454611f67565b825550505050565b600090565b612021612014565b61202c818484611fef565b505050565b5b8181101561205057612045600082612019565b600181019050612032565b5050565b601f8211156120955761206681611f35565b61206f84611f4a565b8101602085101561207e578190505b61209261208a85611f4a565b830182612031565b50505b505050565b600082821c905092915050565b60006120b86000198460080261209a565b1980831691505092915050565b60006120d183836120a7565b9150826002028217905092915050565b6120ea82611661565b67ffffffffffffffff81111561210357612102611bc0565b5b61210d8254611c1e565b612118828285612054565b600060209050601f83116001811461214b5760008415612139578287015190505b61214385826120c5565b8655506121ab565b601f19841661215986611f35565b60005b828110156121815784890151825560018201915060208501945060208101905061215c565b8683101561219e578489015161219a601f8916826120a7565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220ecd286a8ee05e4761bb4b82d29e71dcd13844d9206cc553575dc6d9a35f19a7b64736f6c634300081c0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100615760003560e01c8063307f8716146100665780634f6601e014610096578063566a0d12146100d35780635af18050146100fc578063682ff3211461012c575b600080fd5b610080600480360381019061007b91906115a1565b610155565b60405161008d91906118c1565b60405180910390f35b8180156100a257600080fd5b506100bd60048036038101906100b89190611974565b610525565b6040516100ca9190611a1d565b60405180910390f35b8180156100df57600080fd5b506100fa60048036038101906100f59190611a38565b610862565b005b610116600480360381019061011191906115a1565b610c28565b60405161012391906118c1565b60405180910390f35b81801561013857600080fd5b50610153600480360381019061014e9190611a9f565b610ff8565b005b606060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b828054905081101561022e578281815481106101bf576101be611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16801561020d5750428382815481106101f9576101f8611b1a565b5b906000526020600020906006020160030154115b1561022157818061021d90611b78565b9250505b80806001019150506101a0565b5060008167ffffffffffffffff81111561024b5761024a611bc0565b5b60405190808252806020026020018201604052801561028457816020015b6102716113bb565b8152602001906001900390816102695790505b5090506000805b8480549050811015610517578481815481106102aa576102a9611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff1680156102f85750428582815481106102e4576102e3611b1a565b5b906000526020600020906006020160030154115b1561050a578481815481106103105761030f611b1a565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b828210156104ba57838290600052602060002001805461042d90611c1e565b80601f016020809104026020016040519081016040528092919081815260200182805461045990611c1e565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b50505050508152602001906001019061040e565b5050505081526020016005820160009054906101000a900460ff1615151515815250508383815181106104f0576104ef611b1a565b5b6020026020010181905250818061050690611b78565b9250505b808060010191505061028b565b508194505050505092915050565b600086600201600081548092919061053c90611b78565b919050559050600082426105509190611c4f565b905060006040518060c001604052808481526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018787906105b09190611e37565b81526020016001151581525090508860010160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040190805190602001906106e792919061141f565b5060a08201518160050160006101000a81548160ff02191690831515021790555050508860000160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401908051906020019061083392919061141f565b5060a08201518160050160006101000a81548160ff021916908315150217905550505050509695505050505050565b6000808560010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610a2257838282815481106108cb576108ca611b1a565b5b90600052602060002090600602016000015414801561095957508473ffffffffffffffffffffffffffffffffffffffff1682828154811061090f5761090e611b1a565b5b906000526020600020906006020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610a155781818154811061097157610970611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff166109cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c690611ea9565b60405180910390fd5b60008282815481106109e4576109e3611b1a565b5b906000526020600020906006020160050160006101000a81548160ff02191690831515021790555060019250610a22565b80806001019150506108ab565b5060008660000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610bde5784828281548110610a8b57610a8a611b1a565b5b906000526020600020906006020160000154148015610b1957508673ffffffffffffffffffffffffffffffffffffffff16828281548110610acf57610ace611b1a565b5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610bd157818181548110610b3157610b30611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16610b8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8690611ea9565b60405180910390fd5b6000828281548110610ba457610ba3611b1a565b5b906000526020600020906006020160050160006101000a81548160ff021916908315150217905550610bde565b8080600101915050610a6b565b5082610c1f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1690611f15565b60405180910390fd5b50505050505050565b606060008360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b8280549050811015610d0157828181548110610c9257610c91611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff168015610ce0575042838281548110610ccc57610ccb611b1a565b5b906000526020600020906006020160030154115b15610cf4578180610cf090611b78565b9250505b8080600101915050610c73565b5060008167ffffffffffffffff811115610d1e57610d1d611bc0565b5b604051908082528060200260200182016040528015610d5757816020015b610d446113bb565b815260200190600190039081610d3c5790505b5090506000805b8480549050811015610fea57848181548110610d7d57610d7c611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff168015610dcb575042858281548110610db757610db6611b1a565b5b906000526020600020906006020160030154115b15610fdd57848181548110610de357610de2611b1a565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610f8d578382906000526020600020018054610f0090611c1e565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2c90611c1e565b8015610f795780601f10610f4e57610100808354040283529160200191610f79565b820191906000526020600020905b815481529060010190602001808311610f5c57829003601f168201915b505050505081526020019060010190610ee1565b5050505081526020016005820160009054906101000a900460ff161515151581525050838381518110610fc357610fc2611b1a565b5b60200260200101819052508180610fd990611b78565b9250505b8080600101915050610d5e565b508194505050505092915050565b6000808660010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b81805490508110156111b6578482828154811061106157611060611b1a565b5b9060005260206000209060060201600001541480156110ef57508573ffffffffffffffffffffffffffffffffffffffff168282815481106110a5576110a4611b1a565b5b906000526020600020906006020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156111a95781818154811061110757611106611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16611165576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115c90611ea9565b60405180910390fd5b8382828154811061117957611178611b1a565b5b906000526020600020906006020160030160008282546111999190611c4f565b92505081905550600192506111b6565b8080600101915050611041565b5060008760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015611370578582828154811061121f5761121e611b1a565b5b9060005260206000209060060201600001541480156112ad57508773ffffffffffffffffffffffffffffffffffffffff1682828154811061126357611262611b1a565b5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15611363578181815481106112c5576112c4611b1a565b5b906000526020600020906006020160050160009054906101000a900460ff16611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131a90611ea9565b60405180910390fd5b8482828154811061133757611336611b1a565b5b906000526020600020906006020160030160008282546113579190611c4f565b92505081905550611370565b80806001019150506111ff565b50826113b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113a890611f15565b60405180910390fd5b5050505050505050565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081526020016000151581525090565b828054828255906000526020600020908101928215611467579160200282015b8281111561146657825182908161145691906120e1565b509160200191906001019061143f565b5b5090506114749190611478565b5090565b5b80821115611498576000818161148f919061149c565b50600101611479565b5090565b5080546114a890611c1e565b6000825580601f106114ba57506114d9565b601f0160209004906000526020600020908101906114d891906114dc565b5b50565b5b808211156114f55760008160009055506001016114dd565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6115208161150d565b811461152b57600080fd5b50565b60008135905061153d81611517565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061156e82611543565b9050919050565b61157e81611563565b811461158957600080fd5b50565b60008135905061159b81611575565b92915050565b600080604083850312156115b8576115b7611503565b5b60006115c68582860161152e565b92505060206115d78582860161158c565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6116208161160d565b82525050565b61162f81611563565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561169b578082015181840152602081019050611680565b60008484015250505050565b6000601f19601f8301169050919050565b60006116c382611661565b6116cd818561166c565b93506116dd81856020860161167d565b6116e6816116a7565b840191505092915050565b60006116fd83836116b8565b905092915050565b6000602082019050919050565b600061171d82611635565b6117278185611640565b93508360208202850161173985611651565b8060005b85811015611775578484038952815161175685826116f1565b945061176183611705565b925060208a0199505060018101905061173d565b50829750879550505050505092915050565b60008115159050919050565b61179c81611787565b82525050565b600060c0830160008301516117ba6000860182611617565b5060208301516117cd6020860182611626565b5060408301516117e06040860182611626565b5060608301516117f36060860182611617565b506080830151848203608086015261180b8282611712565b91505060a083015161182060a0860182611793565b508091505092915050565b600061183783836117a2565b905092915050565b6000602082019050919050565b6000611857826115e1565b61186181856115ec565b935083602082028501611873856115fd565b8060005b858110156118af5784840389528151611890858261182b565b945061189b8361183f565b925060208a01995050600181019050611877565b50829750879550505050505092915050565b600060208201905081810360008301526118db818461184c565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611908576119076118e3565b5b8235905067ffffffffffffffff811115611925576119246118e8565b5b602083019150836020820283011115611941576119406118ed565b5b9250929050565b6119518161160d565b811461195c57600080fd5b50565b60008135905061196e81611948565b92915050565b60008060008060008060a0878903121561199157611990611503565b5b600061199f89828a0161152e565b96505060206119b089828a0161158c565b95505060406119c189828a0161158c565b945050606087013567ffffffffffffffff8111156119e2576119e1611508565b5b6119ee89828a016118f2565b93509350506080611a0189828a0161195f565b9150509295509295509295565b611a178161160d565b82525050565b6000602082019050611a326000830184611a0e565b92915050565b60008060008060808587031215611a5257611a51611503565b5b6000611a608782880161152e565b9450506020611a718782880161158c565b9350506040611a828782880161158c565b9250506060611a938782880161195f565b91505092959194509250565b600080600080600060a08688031215611abb57611aba611503565b5b6000611ac98882890161152e565b9550506020611ada8882890161158c565b9450506040611aeb8882890161158c565b9350506060611afc8882890161195f565b9250506080611b0d8882890161195f565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b838261160d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611bb557611bb4611b49565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c3657607f821691505b602082108103611c4957611c48611bef565b5b50919050565b6000611c5a8261160d565b9150611c658361160d565b9250828201905080821115611c7d57611c7c611b49565b5b92915050565b611c8c826116a7565b810181811067ffffffffffffffff82111715611cab57611caa611bc0565b5b80604052505050565b6000611cbe6114f9565b9050611cca8282611c83565b919050565b600067ffffffffffffffff821115611cea57611ce9611bc0565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff821115611d1b57611d1a611bc0565b5b611d24826116a7565b9050602081019050919050565b82818337600083830152505050565b6000611d53611d4e84611d00565b611cb4565b905082815260208101848484011115611d6f57611d6e611cfb565b5b611d7a848285611d31565b509392505050565b600082601f830112611d9757611d966118e3565b5b8135611da7848260208601611d40565b91505092915050565b6000611dc3611dbe84611ccf565b611cb4565b90508083825260208201905060208402830185811115611de657611de56118ed565b5b835b81811015611e2d57803567ffffffffffffffff811115611e0b57611e0a6118e3565b5b808601611e188982611d82565b85526020850194505050602081019050611de8565b5050509392505050565b6000611e44368484611db0565b905092915050565b600082825260208201905092915050565b7f5065726d697373696f6e206e6f74206163746976650000000000000000000000600082015250565b6000611e93601583611e4c565b9150611e9e82611e5d565b602082019050919050565b60006020820190508181036000830152611ec281611e86565b9050919050565b7f5065726d697373696f6e206e6f7420666f756e64000000000000000000000000600082015250565b6000611eff601483611e4c565b9150611f0a82611ec9565b602082019050919050565b60006020820190508181036000830152611f2e81611ef2565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611f977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f5a565b611fa18683611f5a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611fde611fd9611fd48461160d565b611fb9565b61160d565b9050919050565b6000819050919050565b611ff883611fc3565b61200c61200482611fe5565b848454611f67565b825550505050565b600090565b612021612014565b61202c818484611fef565b505050565b5b8181101561205057612045600082612019565b600181019050612032565b5050565b601f8211156120955761206681611f35565b61206f84611f4a565b8101602085101561207e578190505b61209261208a85611f4a565b830182612031565b50505b505050565b600082821c905092915050565b60006120b86000198460080261209a565b1980831691505092915050565b60006120d183836120a7565b9150826002028217905092915050565b6120ea82611661565b67ffffffffffffffff81111561210357612102611bc0565b5b61210d8254611c1e565b612118828285612054565b600060209050601f83116001811461214b5760008415612139578287015190505b61214385826120c5565b8655506121ab565b601f19841661215986611f35565b60005b828110156121815784890151825560018201915060208501945060208101905061215c565b8683101561219e578489015161219a601f8916826120a7565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220ecd286a8ee05e4761bb4b82d29e71dcd13844d9206cc553575dc6d9a35f19a7b64736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}