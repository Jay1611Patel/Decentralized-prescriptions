{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [],
  "transactionHash": "0xda6e39d629aa2728895be44e9661dcd158940f6961c01aec0b7e828e25d50b6d",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1369421",
    "logsBloom": "0x
    "blockHash": "0x7417d0c49316156a23ff6d62df8d73aa4bf4f99205f4217fd3a9b8fd4060b470",
    "transactionHash": "0xda6e39d629aa2728895be44e9661dcd158940f6961c01aec0b7e828e25d50b6d",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1369421",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "24a156bda98ec41b76c0823b6d418211",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/PermissionsLib.sol\":\"PermissionsLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMedicalAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\ninterface IMedicalAccess {\\n    struct AccessPermission {\\n        uint256 requestId;\\n        address doctor;\\n        address patient;\\n        uint256 expiryTime;\\n        string[] dataFields; // e.g., [\\\"name\\\", \\\"dob\\\", \\\"allergies\\\"]\\n        bool isActive;\\n    }\\n\\n    // Struct Definitions\\n    struct DoctorProfile {\\n        string licenseHash;\\n        uint256 expiryDate;\\n        string name;\\n        string specialization;\\n        bool isActive;\\n    }\\n\\n    struct PharmacistProfile {\\n        string pharmacyId;\\n        string pharmacyName;\\n        bool isVerified;\\n    }\\n\\n    // Events\\n    event DoctorRegistered(\\n        address indexed doctor,\\n        string licenseHash,\\n        uint256 expiry\\n    );\\n\\n    struct AccessRequest {\\n        uint256 id;\\n        address doctor;\\n        address patient;\\n        string doctorName;\\n        string hospital;\\n        uint256 timestamp;\\n        bool fulfilled;\\n    }\\n\\n    event DoctorUpdated(address indexed doctor);\\n    event DoctorRevoked(address indexed doctor);\\n    event PharmacistRegistered(address indexed pharmacist, string pharmacyId);\\n    event PharmacistRevoked(address indexed pharmacist);\\n    event PatientRegistered(address indexed account);\\n    event PauseToggled(bool isPaused);\\n    event RoleRevokedWithSender(bytes32 indexed role, address indexed account);\\n    event DataStored(address indexed patient, string cid);\\n    event AccessRequested(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessApproved(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessRevoked(address indexed doctor, address indexed patient);\\n    event TemporaryAccessGranted(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient,\\n        uint256 expiryTime,\\n        string[] dataFields\\n    );\\n    event AccessExtended(uint256 indexed requestId, uint256 newExpiry);\\n    event AccessRevokedEarly(uint256 indexed requestId);\\n\\n    // Role Constants\\n    function DOCTOR_ROLE() external pure returns (bytes32);\\n\\n    function PHARMACIST_ROLE() external pure returns (bytes32);\\n\\n    function ADMIN_ROLE() external pure returns (bytes32);\\n\\n    function PATIENT_ROLE() external view returns (bytes32);\\n\\n    // Role Verification\\n    function isActive(address doctorAddress) external view returns (bool);\\n\\n    function isVerifiedPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (bool);\\n\\n    function hasRole(\\n        bytes32 role,\\n        address account\\n    ) external view returns (bool);\\n\\n    function requestAccess(\\n        address patient,\\n        string memory doctorName,\\n        string memory hospital\\n    ) external;\\n\\n    function approveAccess(\\n        uint256 requestId,\\n        bytes memory encryptedKey\\n    ) external;\\n\\n    function revokeAccess(address doctor) external;\\n\\n    function storeDataCID(string calldata cid) external;\\n\\n    function grantTemporaryAccess(\\n        address doctor,\\n        string[] calldata dataFields,\\n        uint256 duration\\n    ) external;\\n\\n    function extendAccess(\\n        uint256 requestId,\\n        uint256 additionalDuration\\n    ) external;\\n\\n    function revokeAccessEarly(uint256 requestId) external;\\n\\n    // Getters\\n    function getDoctor(\\n        address doctorAddress\\n    ) external view returns (DoctorProfile memory);\\n\\n    function getPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (PharmacistProfile memory);\\n\\n    function getAllDoctors() external view returns (address[] memory);\\n\\n    function getAllPharmacists() external view returns (address[] memory);\\n\\n    function getDoctorCount() external view returns (uint256);\\n\\n    function getPharmacistCount() external view returns (uint256);\\n\\n    function getActivePermissions(\\n        address patient\\n    ) external view returns (AccessPermission[] memory);\\n\\n    // Registration Functions\\n    function registerDoctor(\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external;\\n\\n    function revokeDoctor(address doctorAddress) external;\\n\\n    function registerPharmacist(\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external;\\n\\n    function revokePharmacist(address pharmacistAddress) external;\\n\\n    function registerPatient() external;\\n\\n    // function renewDoctorLicense(\\n    //     address doctorAddress,\\n    //     uint256 newExpiry\\n    // ) external;\\n\\n    // System Controls\\n    function togglePause(uint256 durationHours) external;\\n\\n    function getPatientCID(\\n        address patient\\n    ) external view returns (string memory);\\n\\n    function getAccessRequests(\\n        address patient\\n    ) external view returns (AccessRequest[] memory);\\n\\n    function emergencyPause() external view returns (bool);\\n}\\n\",\"keccak256\":\"0x7ff7826caebbde1b1679db947280a596c462ac2b89a57e7dbc268ae5ed0d2e54\",\"license\":\"MIT\"},\"contracts/libraries/PermissionsLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\nimport \\\"../interfaces/IMedicalAccess.sol\\\";\\n\\nlibrary PermissionsLib {\\n    struct AccessPermissionStorage {\\n        mapping(address => IMedicalAccess.AccessPermission[]) patientPermissions;\\n        uint256 nextRequestId;\\n    }\\n\\n    function grantTemporaryAccess(\\n        AccessPermissionStorage storage self,\\n        address doctor,\\n        address patient,\\n        string[] calldata dataFields,\\n        uint256 duration\\n    ) external returns (uint256 requestId) {\\n        requestId = self.nextRequestId++;\\n        uint256 expiryTime = block.timestamp + duration;\\n\\n        self.patientPermissions[patient].push(\\n            IMedicalAccess.AccessPermission({\\n                requestId: requestId,\\n                doctor: doctor,\\n                patient: patient,\\n                expiryTime: expiryTime,\\n                dataFields: dataFields,\\n                isActive: true\\n            })\\n        );\\n    }\\n\\n    function extendAccess(\\n        AccessPermissionStorage storage self,\\n        address patient,\\n        uint256 requestId,\\n        uint256 additionalDuration\\n    ) external {\\n        IMedicalAccess.AccessPermission[] storage permissions = self\\n            .patientPermissions[patient];\\n        for (uint i = 0; i < permissions.length; i++) {\\n            if (permissions[i].requestId == requestId) {\\n                require(permissions[i].isActive, \\\"Permission not active\\\");\\n                permissions[i].expiryTime += additionalDuration;\\n                return;\\n            }\\n        }\\n        revert(\\\"Permission not found\\\");\\n    }\\n\\n    function revokeAccessEarly(\\n        AccessPermissionStorage storage self,\\n        address patient,\\n        uint256 requestId\\n    ) external {\\n        IMedicalAccess.AccessPermission[] storage permissions = self\\n            .patientPermissions[patient];\\n        for (uint i = 0; i < permissions.length; i++) {\\n            if (permissions[i].requestId == requestId) {\\n                require(permissions[i].isActive, \\\"Permission not active\\\");\\n                permissions[i].isActive = false;\\n                return;\\n            }\\n        }\\n        revert(\\\"Permission not found\\\");\\n    }\\n\\n    function getActivePermissions(\\n        AccessPermissionStorage storage self,\\n        address patient\\n    ) external view returns (IMedicalAccess.AccessPermission[] memory) {\\n        IMedicalAccess.AccessPermission[] storage all = self.patientPermissions[\\n            patient\\n        ];\\n        uint256 activeCount = 0;\\n\\n        for (uint i = 0; i < all.length; i++) {\\n            if (all[i].isActive && all[i].expiryTime > block.timestamp) {\\n                activeCount++;\\n            }\\n        }\\n\\n        IMedicalAccess.AccessPermission[]\\n            memory result = new IMedicalAccess.AccessPermission[](activeCount);\\n        uint256 index = 0;\\n\\n        for (uint i = 0; i < all.length; i++) {\\n            if (all[i].isActive && all[i].expiryTime > block.timestamp) {\\n                result[index] = all[i];\\n                index++;\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xcdeaa30b7333d5c7ec0c5f75f8fbcabcc339ceea957424de42bf1766de34f595\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6117de610052600b82828239805160001a6073146045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6601e01461005b578063cbca4aec14610098578063d5f08281146100c1578063de9d94b8146100ea575b600080fd5b81801561006757600080fd5b50610082600480360381019061007d9190610c59565b61011a565b60405161008f9190610d02565b60405180910390f35b8180156100a457600080fd5b506100bf60048036038101906100ba9190610d1d565b610305565b005b8180156100cd57600080fd5b506100e860048036038101906100e39190610d70565b610487565b005b61010460048036038101906100ff9190610dd7565b610608565b60405161011191906110ed565b60405180910390f35b60008660010160008154809291906101319061113e565b919050559050600082426101459190611186565b90508760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052808481526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018787906101e4919061139d565b81526020016001151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040190805190602001906102d79291906109d8565b5060a08201518160050160006101000a81548160ff0219169083151502179055505050509695505050505050565b60008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610446578282828154811061036d5761036c6113b2565b5b9060005260206000209060060201600001540361043957818181548110610397576103966113b2565b5b906000526020600020906006020160050160009054906101000a900460ff166103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec9061143e565b60405180910390fd5b600082828154811061040a576104096113b2565b5b906000526020600020906006020160050160006101000a81548160ff0219169083151502179055505050610482565b808060010191505061034d565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610479906114aa565b60405180910390fd5b505050565b60008460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b81805490508110156105c657838282815481106104ef576104ee6113b2565b5b906000526020600020906006020160000154036105b957818181548110610519576105186113b2565b5b906000526020600020906006020160050160009054906101000a900460ff16610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e9061143e565b60405180910390fd5b8282828154811061058b5761058a6113b2565b5b906000526020600020906006020160030160008282546105ab9190611186565b925050819055505050610602565b80806001019150506104cf565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f9906114aa565b60405180910390fd5b50505050565b606060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b82805490508110156106e157828181548110610672576106716113b2565b5b906000526020600020906006020160050160009054906101000a900460ff1680156106c05750428382815481106106ac576106ab6113b2565b5b906000526020600020906006020160030154115b156106d45781806106d09061113e565b9250505b8080600101915050610653565b5060008167ffffffffffffffff8111156106fe576106fd6111ba565b5b60405190808252806020026020018201604052801561073757816020015b610724610a31565b81526020019060019003908161071c5790505b5090506000805b84805490508110156109ca5784818154811061075d5761075c6113b2565b5b906000526020600020906006020160050160009054906101000a900460ff1680156107ab575042858281548110610797576107966113b2565b5b906000526020600020906006020160030154115b156109bd578481815481106107c3576107c26113b2565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561096d5783829060005260206000200180546108e0906114f9565b80601f016020809104026020016040519081016040528092919081815260200182805461090c906114f9565b80156109595780601f1061092e57610100808354040283529160200191610959565b820191906000526020600020905b81548152906001019060200180831161093c57829003601f168201915b5050505050815260200190600101906108c1565b5050505081526020016005820160009054906101000a900460ff1615151515815250508383815181106109a3576109a26113b2565b5b602002602001018190525081806109b99061113e565b9250505b808060010191505061073e565b508194505050505092915050565b828054828255906000526020600020908101928215610a20579160200282015b82811115610a1f578251829081610a0f91906116d6565b50916020019190600101906109f8565b5b509050610a2d9190610a95565b5090565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081526020016000151581525090565b5b80821115610ab55760008181610aac9190610ab9565b50600101610a96565b5090565b508054610ac5906114f9565b6000825580601f10610ad75750610af6565b601f016020900490600052602060002090810190610af59190610af9565b5b50565b5b80821115610b12576000816000905550600101610afa565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b3d81610b2a565b8114610b4857600080fd5b50565b600081359050610b5a81610b34565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8b82610b60565b9050919050565b610b9b81610b80565b8114610ba657600080fd5b50565b600081359050610bb881610b92565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610be357610be2610bbe565b5b8235905067ffffffffffffffff811115610c0057610bff610bc3565b5b602083019150836020820283011115610c1c57610c1b610bc8565b5b9250929050565b6000819050919050565b610c3681610c23565b8114610c4157600080fd5b50565b600081359050610c5381610c2d565b92915050565b60008060008060008060a08789031215610c7657610c75610b20565b5b6000610c8489828a01610b4b565b9650506020610c9589828a01610ba9565b9550506040610ca689828a01610ba9565b945050606087013567ffffffffffffffff811115610cc757610cc6610b25565b5b610cd389828a01610bcd565b93509350506080610ce689828a01610c44565b9150509295509295509295565b610cfc81610c23565b82525050565b6000602082019050610d176000830184610cf3565b92915050565b600080600060608486031215610d3657610d35610b20565b5b6000610d4486828701610b4b565b9350506020610d5586828701610ba9565b9250506040610d6686828701610c44565b9150509250925092565b60008060008060808587031215610d8a57610d89610b20565b5b6000610d9887828801610b4b565b9450506020610da987828801610ba9565b9350506040610dba87828801610c44565b9250506060610dcb87828801610c44565b91505092959194509250565b60008060408385031215610dee57610ded610b20565b5b6000610dfc85828601610b4b565b9250506020610e0d85828601610ba9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e4c81610c23565b82525050565b610e5b81610b80565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ec7578082015181840152602081019050610eac565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eef82610e8d565b610ef98185610e98565b9350610f09818560208601610ea9565b610f1281610ed3565b840191505092915050565b6000610f298383610ee4565b905092915050565b6000602082019050919050565b6000610f4982610e61565b610f538185610e6c565b935083602082028501610f6585610e7d565b8060005b85811015610fa15784840389528151610f828582610f1d565b9450610f8d83610f31565b925060208a01995050600181019050610f69565b50829750879550505050505092915050565b60008115159050919050565b610fc881610fb3565b82525050565b600060c083016000830151610fe66000860182610e43565b506020830151610ff96020860182610e52565b50604083015161100c6040860182610e52565b50606083015161101f6060860182610e43565b50608083015184820360808601526110378282610f3e565b91505060a083015161104c60a0860182610fbf565b508091505092915050565b60006110638383610fce565b905092915050565b6000602082019050919050565b600061108382610e17565b61108d8185610e22565b93508360208202850161109f85610e33565b8060005b858110156110db57848403895281516110bc8582611057565b94506110c78361106b565b925060208a019950506001810190506110a3565b50829750879550505050505092915050565b600060208201905081810360008301526111078184611078565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061114982610c23565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361117b5761117a61110f565b5b600182019050919050565b600061119182610c23565b915061119c83610c23565b92508282019050808211156111b4576111b361110f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111f282610ed3565b810181811067ffffffffffffffff82111715611211576112106111ba565b5b80604052505050565b6000611224610b16565b905061123082826111e9565b919050565b600067ffffffffffffffff8211156112505761124f6111ba565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff821115611281576112806111ba565b5b61128a82610ed3565b9050602081019050919050565b82818337600083830152505050565b60006112b96112b484611266565b61121a565b9050828152602081018484840111156112d5576112d4611261565b5b6112e0848285611297565b509392505050565b600082601f8301126112fd576112fc610bbe565b5b813561130d8482602086016112a6565b91505092915050565b600061132961132484611235565b61121a565b9050808382526020820190506020840283018581111561134c5761134b610bc8565b5b835b8181101561139357803567ffffffffffffffff81111561137157611370610bbe565b5b80860161137e89826112e8565b8552602085019450505060208101905061134e565b5050509392505050565b60006113aa368484611316565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5065726d697373696f6e206e6f74206163746976650000000000000000000000600082015250565b60006114286015836113e1565b9150611433826113f2565b602082019050919050565b600060208201905081810360008301526114578161141b565b9050919050565b7f5065726d697373696f6e206e6f7420666f756e64000000000000000000000000600082015250565b60006114946014836113e1565b915061149f8261145e565b602082019050919050565b600060208201905081810360008301526114c381611487565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061151157607f821691505b602082108103611524576115236114ca565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261158c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261154f565b611596868361154f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115d36115ce6115c984610c23565b6115ae565b610c23565b9050919050565b6000819050919050565b6115ed836115b8565b6116016115f9826115da565b84845461155c565b825550505050565b600090565b611616611609565b6116218184846115e4565b505050565b5b818110156116455761163a60008261160e565b600181019050611627565b5050565b601f82111561168a5761165b8161152a565b6116648461153f565b81016020851015611673578190505b61168761167f8561153f565b830182611626565b50505b505050565b600082821c905092915050565b60006116ad6000198460080261168f565b1980831691505092915050565b60006116c6838361169c565b9150826002028217905092915050565b6116df82610e8d565b67ffffffffffffffff8111156116f8576116f76111ba565b5b61170282546114f9565b61170d828285611649565b600060209050601f831160018114611740576000841561172e578287015190505b61173885826116ba565b8655506117a0565b601f19841661174e8661152a565b60005b8281101561177657848901518255600182019150602085019450602081019050611751565b86831015611793578489015161178f601f89168261169c565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209275003c97ffe37095bea863979a953138fe97f26e76c38f9d5e637a649b395664736f6c634300081c0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c80634f6601e01461005b578063cbca4aec14610098578063d5f08281146100c1578063de9d94b8146100ea575b600080fd5b81801561006757600080fd5b50610082600480360381019061007d9190610c59565b61011a565b60405161008f9190610d02565b60405180910390f35b8180156100a457600080fd5b506100bf60048036038101906100ba9190610d1d565b610305565b005b8180156100cd57600080fd5b506100e860048036038101906100e39190610d70565b610487565b005b61010460048036038101906100ff9190610dd7565b610608565b60405161011191906110ed565b60405180910390f35b60008660010160008154809291906101319061113e565b919050559050600082426101459190611186565b90508760000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052808481526020018973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018787906101e4919061139d565b81526020016001151581525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040190805190602001906102d79291906109d8565b5060a08201518160050160006101000a81548160ff0219169083151502179055505050509695505050505050565b60008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610446578282828154811061036d5761036c6113b2565b5b9060005260206000209060060201600001540361043957818181548110610397576103966113b2565b5b906000526020600020906006020160050160009054906101000a900460ff166103f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ec9061143e565b60405180910390fd5b600082828154811061040a576104096113b2565b5b906000526020600020906006020160050160006101000a81548160ff0219169083151502179055505050610482565b808060010191505061034d565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610479906114aa565b60405180910390fd5b505050565b60008460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b81805490508110156105c657838282815481106104ef576104ee6113b2565b5b906000526020600020906006020160000154036105b957818181548110610519576105186113b2565b5b906000526020600020906006020160050160009054906101000a900460ff16610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e9061143e565b60405180910390fd5b8282828154811061058b5761058a6113b2565b5b906000526020600020906006020160030160008282546105ab9190611186565b925050819055505050610602565b80806001019150506104cf565b506040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f9906114aa565b60405180910390fd5b50505050565b606060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000805b82805490508110156106e157828181548110610672576106716113b2565b5b906000526020600020906006020160050160009054906101000a900460ff1680156106c05750428382815481106106ac576106ab6113b2565b5b906000526020600020906006020160030154115b156106d45781806106d09061113e565b9250505b8080600101915050610653565b5060008167ffffffffffffffff8111156106fe576106fd6111ba565b5b60405190808252806020026020018201604052801561073757816020015b610724610a31565b81526020019060019003908161071c5790505b5090506000805b84805490508110156109ca5784818154811061075d5761075c6113b2565b5b906000526020600020906006020160050160009054906101000a900460ff1680156107ab575042858281548110610797576107966113b2565b5b906000526020600020906006020160030154115b156109bd578481815481106107c3576107c26113b2565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020016000905b8282101561096d5783829060005260206000200180546108e0906114f9565b80601f016020809104026020016040519081016040528092919081815260200182805461090c906114f9565b80156109595780601f1061092e57610100808354040283529160200191610959565b820191906000526020600020905b81548152906001019060200180831161093c57829003601f168201915b5050505050815260200190600101906108c1565b5050505081526020016005820160009054906101000a900460ff1615151515815250508383815181106109a3576109a26113b2565b5b602002602001018190525081806109b99061113e565b9250505b808060010191505061073e565b508194505050505092915050565b828054828255906000526020600020908101928215610a20579160200282015b82811115610a1f578251829081610a0f91906116d6565b50916020019190600101906109f8565b5b509050610a2d9190610a95565b5090565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001606081526020016000151581525090565b5b80821115610ab55760008181610aac9190610ab9565b50600101610a96565b5090565b508054610ac5906114f9565b6000825580601f10610ad75750610af6565b601f016020900490600052602060002090810190610af59190610af9565b5b50565b5b80821115610b12576000816000905550600101610afa565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610b3d81610b2a565b8114610b4857600080fd5b50565b600081359050610b5a81610b34565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8b82610b60565b9050919050565b610b9b81610b80565b8114610ba657600080fd5b50565b600081359050610bb881610b92565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610be357610be2610bbe565b5b8235905067ffffffffffffffff811115610c0057610bff610bc3565b5b602083019150836020820283011115610c1c57610c1b610bc8565b5b9250929050565b6000819050919050565b610c3681610c23565b8114610c4157600080fd5b50565b600081359050610c5381610c2d565b92915050565b60008060008060008060a08789031215610c7657610c75610b20565b5b6000610c8489828a01610b4b565b9650506020610c9589828a01610ba9565b9550506040610ca689828a01610ba9565b945050606087013567ffffffffffffffff811115610cc757610cc6610b25565b5b610cd389828a01610bcd565b93509350506080610ce689828a01610c44565b9150509295509295509295565b610cfc81610c23565b82525050565b6000602082019050610d176000830184610cf3565b92915050565b600080600060608486031215610d3657610d35610b20565b5b6000610d4486828701610b4b565b9350506020610d5586828701610ba9565b9250506040610d6686828701610c44565b9150509250925092565b60008060008060808587031215610d8a57610d89610b20565b5b6000610d9887828801610b4b565b9450506020610da987828801610ba9565b9350506040610dba87828801610c44565b9250506060610dcb87828801610c44565b91505092959194509250565b60008060408385031215610dee57610ded610b20565b5b6000610dfc85828601610b4b565b9250506020610e0d85828601610ba9565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610e4c81610c23565b82525050565b610e5b81610b80565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ec7578082015181840152602081019050610eac565b60008484015250505050565b6000601f19601f8301169050919050565b6000610eef82610e8d565b610ef98185610e98565b9350610f09818560208601610ea9565b610f1281610ed3565b840191505092915050565b6000610f298383610ee4565b905092915050565b6000602082019050919050565b6000610f4982610e61565b610f538185610e6c565b935083602082028501610f6585610e7d565b8060005b85811015610fa15784840389528151610f828582610f1d565b9450610f8d83610f31565b925060208a01995050600181019050610f69565b50829750879550505050505092915050565b60008115159050919050565b610fc881610fb3565b82525050565b600060c083016000830151610fe66000860182610e43565b506020830151610ff96020860182610e52565b50604083015161100c6040860182610e52565b50606083015161101f6060860182610e43565b50608083015184820360808601526110378282610f3e565b91505060a083015161104c60a0860182610fbf565b508091505092915050565b60006110638383610fce565b905092915050565b6000602082019050919050565b600061108382610e17565b61108d8185610e22565b93508360208202850161109f85610e33565b8060005b858110156110db57848403895281516110bc8582611057565b94506110c78361106b565b925060208a019950506001810190506110a3565b50829750879550505050505092915050565b600060208201905081810360008301526111078184611078565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061114982610c23565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361117b5761117a61110f565b5b600182019050919050565b600061119182610c23565b915061119c83610c23565b92508282019050808211156111b4576111b361110f565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111f282610ed3565b810181811067ffffffffffffffff82111715611211576112106111ba565b5b80604052505050565b6000611224610b16565b905061123082826111e9565b919050565b600067ffffffffffffffff8211156112505761124f6111ba565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff821115611281576112806111ba565b5b61128a82610ed3565b9050602081019050919050565b82818337600083830152505050565b60006112b96112b484611266565b61121a565b9050828152602081018484840111156112d5576112d4611261565b5b6112e0848285611297565b509392505050565b600082601f8301126112fd576112fc610bbe565b5b813561130d8482602086016112a6565b91505092915050565b600061132961132484611235565b61121a565b9050808382526020820190506020840283018581111561134c5761134b610bc8565b5b835b8181101561139357803567ffffffffffffffff81111561137157611370610bbe565b5b80860161137e89826112e8565b8552602085019450505060208101905061134e565b5050509392505050565b60006113aa368484611316565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f5065726d697373696f6e206e6f74206163746976650000000000000000000000600082015250565b60006114286015836113e1565b9150611433826113f2565b602082019050919050565b600060208201905081810360008301526114578161141b565b9050919050565b7f5065726d697373696f6e206e6f7420666f756e64000000000000000000000000600082015250565b60006114946014836113e1565b915061149f8261145e565b602082019050919050565b600060208201905081810360008301526114c381611487565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061151157607f821691505b602082108103611524576115236114ca565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261158c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261154f565b611596868361154f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006115d36115ce6115c984610c23565b6115ae565b610c23565b9050919050565b6000819050919050565b6115ed836115b8565b6116016115f9826115da565b84845461155c565b825550505050565b600090565b611616611609565b6116218184846115e4565b505050565b5b818110156116455761163a60008261160e565b600181019050611627565b5050565b601f82111561168a5761165b8161152a565b6116648461153f565b81016020851015611673578190505b61168761167f8561153f565b830182611626565b50505b505050565b600082821c905092915050565b60006116ad6000198460080261168f565b1980831691505092915050565b60006116c6838361169c565b9150826002028217905092915050565b6116df82610e8d565b67ffffffffffffffff8111156116f8576116f76111ba565b5b61170282546114f9565b61170d828285611649565b600060209050601f831160018114611740576000841561172e578287015190505b61173885826116ba565b8655506117a0565b601f19841661174e8661152a565b60005b8281101561177657848901518255600182019150602085019450602081019050611751565b86831015611793578489015161178f601f89168261169c565b8355505b6001600288020188555050505b50505050505056fea26469706673582212209275003c97ffe37095bea863979a953138fe97f26e76c38f9d5e637a649b395664736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}