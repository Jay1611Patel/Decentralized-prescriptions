{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [],
  "transactionHash": "0x6e79427a4607fa58f850acbfc8e47c084fa2b520d5a27e595535b9775191896e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1701648",
    "logsBloom": "0x
    "blockHash": "0x6a8d5eb1ae50c89d5f8d4cff1652619d5d8125b535a7e261b4a0489d7a9cd313",
    "transactionHash": "0x6e79427a4607fa58f850acbfc8e47c084fa2b520d5a27e595535b9775191896e",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1701648",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "59ae38f1cb551820bd93d3d8a232d5e1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/RegistryLib.sol\":\"RegistryLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMedicalAccess.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\ninterface IMedicalAccess {\\n    struct AccessPermission {\\n        uint256 requestId;\\n        address doctor;\\n        address patient;\\n        uint256 expiryTime;\\n        string[] dataFields; // e.g., [\\\"name\\\", \\\"dob\\\", \\\"allergies\\\"]\\n        bool isActive;\\n    }\\n\\n    // Struct Definitions\\n    struct DoctorProfile {\\n        string licenseHash;\\n        uint256 expiryDate;\\n        string name;\\n        string specialization;\\n        bool isActive;\\n    }\\n\\n    struct PharmacistProfile {\\n        string pharmacyId;\\n        string pharmacyName;\\n        bool isVerified;\\n    }\\n\\n    // Events\\n    event DoctorRegistered(\\n        address indexed doctor,\\n        string licenseHash,\\n        uint256 expiry\\n    );\\n\\n    struct AccessRequest {\\n        uint256 id;\\n        address doctor;\\n        address patient;\\n        string doctorName;\\n        string hospital;\\n        uint256 timestamp;\\n        bool fulfilled;\\n    }\\n\\n    event DoctorUpdated(address indexed doctor);\\n    event DoctorRevoked(address indexed doctor);\\n    event PharmacistRegistered(address indexed pharmacist, string pharmacyId);\\n    event PharmacistRevoked(address indexed pharmacist);\\n    event PatientRegistered(address indexed account);\\n    event PauseToggled(bool isPaused);\\n    event RoleRevokedWithSender(bytes32 indexed role, address indexed account);\\n    event DataStored(address indexed patient, string cid);\\n    event AccessRequested(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessApproved(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient\\n    );\\n    event AccessRevoked(address indexed doctor, address indexed patient);\\n    event TemporaryAccessGranted(\\n        uint256 indexed requestId,\\n        address indexed doctor,\\n        address indexed patient,\\n        uint256 expiryTime,\\n        string[] dataFields\\n    );\\n    event AccessExtended(uint256 indexed requestId, uint256 newExpiry);\\n    event AccessRevokedEarly(uint256 indexed requestId);\\n\\n    // Role Constants\\n    function DOCTOR_ROLE() external pure returns (bytes32);\\n\\n    function PHARMACIST_ROLE() external pure returns (bytes32);\\n\\n    function ADMIN_ROLE() external pure returns (bytes32);\\n\\n    function PATIENT_ROLE() external view returns (bytes32);\\n\\n    // Role Verification\\n    function isActive(address doctorAddress) external view returns (bool);\\n\\n    function isVerifiedPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (bool);\\n\\n    function hasRole(\\n        bytes32 role,\\n        address account\\n    ) external view returns (bool);\\n\\n    function requestAccess(\\n        address patient,\\n        string memory doctorName,\\n        string memory hospital\\n    ) external;\\n\\n    function approveAccess(\\n        uint256 requestId,\\n        bytes memory encryptedKey\\n    ) external;\\n\\n    function revokeAccess(address doctor) external;\\n\\n    function storeDataCID(string calldata cid) external;\\n\\n    function grantTemporaryAccess(\\n        address doctor,\\n        string[] calldata dataFields,\\n        uint256 duration\\n    ) external;\\n\\n    function extendAccess(\\n        uint256 requestId,\\n        address doctor,\\n        uint256 additionalDuration\\n    ) external;\\n\\n    function revokeAccessEarly(uint256 requestId, address doctor) external;\\n\\n    // Getters\\n    function getDoctor(\\n        address doctorAddress\\n    ) external view returns (DoctorProfile memory);\\n\\n    function getPharmacist(\\n        address pharmacistAddress\\n    ) external view returns (PharmacistProfile memory);\\n\\n    function getAllDoctors() external view returns (address[] memory);\\n\\n    function getAllPharmacists() external view returns (address[] memory);\\n\\n    function getDoctorCount() external view returns (uint256);\\n\\n    function getPharmacistCount() external view returns (uint256);\\n\\n    function getPatientPermissions()\\n        external\\n        view\\n        returns (AccessPermission[] memory);\\n\\n    function getDoctorAccess()\\n        external\\n        view\\n        returns (AccessPermission[] memory);\\n\\n    // Registration Functions\\n    function registerDoctor(\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external;\\n\\n    function revokeDoctor(address doctorAddress) external;\\n\\n    function registerPharmacist(\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external;\\n\\n    function revokePharmacist(address pharmacistAddress) external;\\n\\n    function registerPatient() external;\\n\\n    // function renewDoctorLicense(\\n    //     address doctorAddress,\\n    //     uint256 newExpiry\\n    // ) external;\\n\\n    // System Controls\\n    function togglePause(uint256 durationHours) external;\\n\\n    function getPatientCID(\\n        address patient\\n    ) external view returns (string memory);\\n\\n    function getAccessRequests(\\n        address patient\\n    ) external view returns (AccessRequest[] memory);\\n\\n    function emergencyPause() external view returns (bool);\\n}\\n\",\"keccak256\":\"0xc70c3983299fe91f7704c26469e5d9f11c89f154d8322dee6782fe4ab7dcb6b1\",\"license\":\"MIT\"},\"contracts/libraries/RegistryLib.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.28;\\n\\nimport \\\"../interfaces/IMedicalAccess.sol\\\";\\n\\nlibrary RegistryLib {\\n    struct DoctorRegistry {\\n        mapping(address => IMedicalAccess.DoctorProfile) doctorRegistry;\\n        mapping(address => uint256) doctorIndex;\\n        address[] doctorList;\\n    }\\n\\n    struct PharmacistRegistry {\\n        mapping(address => IMedicalAccess.PharmacistProfile) pharmacistRegistry;\\n        mapping(address => uint256) pharmacistIndex;\\n        address[] pharmacistList;\\n    }\\n\\n    function registerDoctor(\\n        DoctorRegistry storage self,\\n        address doctorAddress,\\n        string memory licenseHash,\\n        uint256 licenseExpiry,\\n        string memory name,\\n        string memory specialization\\n    ) external {\\n        self.doctorRegistry[doctorAddress] = IMedicalAccess.DoctorProfile({\\n            licenseHash: licenseHash,\\n            expiryDate: licenseExpiry,\\n            name: name,\\n            specialization: specialization,\\n            isActive: true\\n        });\\n        self.doctorList.push(doctorAddress);\\n        self.doctorIndex[doctorAddress] = self.doctorList.length;\\n    }\\n\\n    function revokeDoctor(\\n        DoctorRegistry storage self,\\n        address doctorAddress\\n    ) external {\\n        uint256 index = self.doctorIndex[doctorAddress];\\n        require(index > 0, \\\"Not an active doctor\\\");\\n        require(\\n            self.doctorRegistry[doctorAddress].isActive,\\n            \\\"Not an active doctor\\\"\\n        );\\n\\n        self.doctorList[index - 1] = self.doctorList[\\n            self.doctorList.length - 1\\n        ];\\n        self.doctorIndex[self.doctorList[index - 1]] = index;\\n        self.doctorList.pop();\\n        self.doctorIndex[doctorAddress] = 0;\\n\\n        self.doctorRegistry[doctorAddress].isActive = false;\\n    }\\n\\n    function registerPharmacist(\\n        PharmacistRegistry storage self,\\n        address pharmacistAddress,\\n        string memory pharmacyId,\\n        string memory pharmacyName\\n    ) external {\\n        self.pharmacistRegistry[pharmacistAddress] = IMedicalAccess\\n            .PharmacistProfile({\\n                pharmacyId: pharmacyId,\\n                pharmacyName: pharmacyName,\\n                isVerified: true\\n            });\\n        self.pharmacistList.push(pharmacistAddress);\\n        self.pharmacistIndex[pharmacistAddress] = self.pharmacistList.length;\\n    }\\n\\n    function revokePharmacist(\\n        PharmacistRegistry storage self,\\n        address pharmacistAddress\\n    ) external {\\n        uint256 index = self.pharmacistIndex[pharmacistAddress];\\n        require(index > 0, \\\"Pharmacist not registered\\\");\\n        require(\\n            self.pharmacistRegistry[pharmacistAddress].isVerified,\\n            \\\"Pharmacist not verified\\\"\\n        );\\n\\n        self.pharmacistList[index - 1] = self.pharmacistList[\\n            self.pharmacistList.length - 1\\n        ];\\n        self.pharmacistIndex[self.pharmacistList[index - 1]] = index;\\n        self.pharmacistList.pop();\\n        self.pharmacistIndex[pharmacistAddress] = 0;\\n    }\\n\\n    function getDoctor(\\n        DoctorRegistry storage self,\\n        address doctorAddress\\n    ) external view returns (IMedicalAccess.DoctorProfile memory) {\\n        return self.doctorRegistry[doctorAddress];\\n    }\\n\\n    function getPharmacist(\\n        PharmacistRegistry storage self,\\n        address pharmacistAddress\\n    ) external view returns (IMedicalAccess.PharmacistProfile memory) {\\n        return self.pharmacistRegistry[pharmacistAddress];\\n    }\\n\\n    function getAllDoctors(\\n        DoctorRegistry storage self\\n    ) external view returns (address[] memory) {\\n        return self.doctorList;\\n    }\\n\\n    function getAllPharmacists(\\n        PharmacistRegistry storage self\\n    ) external view returns (address[] memory) {\\n        return self.pharmacistList;\\n    }\\n\\n    function getDoctorCount(\\n        DoctorRegistry storage self\\n    ) external view returns (uint256) {\\n        return self.doctorList.length;\\n    }\\n\\n    function getPharmacistCount(\\n        PharmacistRegistry storage self\\n    ) external view returns (uint256) {\\n        return self.pharmacistList.length;\\n    }\\n}\\n\",\"keccak256\":\"0x49c98d203daab24432cfd2952e82a1d7fa088d02e79ee2bcfd60f87e4f7dcea6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x611de2610052600b82828239805160001a6073146045577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c80638e7cc4bc116100705780638e7cc4bc1461018f5780638f77b68d146101b8578063c5f5d36f146101e8578063e075debc14610218578063f3208c1e14610241576100a8565b806326dd7c36146100ad57806349a839a7146100dd57806355c473871461010d5780635da03710146101365780637e39afd61461015f575b600080fd5b6100c760048036038101906100c291906111da565b610271565b6040516100d4919061131c565b60405180910390f35b6100f760048036038101906100f29190611374565b61040c565b6040516101049190611451565b60405180910390f35b81801561011957600080fd5b50610134600480360381019061012f9190611374565b610643565b005b81801561014257600080fd5b5061015d600480360381019061015891906115a8565b61099f565b005b61017960048036038101906101749190611647565b610b05565b6040516101869190611732565b60405180910390f35b81801561019b57600080fd5b506101b660048036038101906101b19190611780565b610b97565b005b6101d260048036038101906101cd9190611861565b610d2b565b6040516101df9190611732565b60405180910390f35b61020260048036038101906101fd9190611647565b610dbd565b60405161020f919061189d565b60405180910390f35b81801561022457600080fd5b5061023f600480360381019061023a91906111da565b610dce565b005b61025b60048036038101906102569190611861565b6110cd565b604051610268919061189d565b60405180910390f35b6102796110de565b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546102d5906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610301906118e7565b801561034e5780601f106103235761010080835404028352916020019161034e565b820191906000526020600020905b81548152906001019060200180831161033157829003601f168201915b50505050508152602001600182018054610367906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610393906118e7565b80156103e05780601f106103b5576101008083540402835291602001916103e0565b820191906000526020600020905b8154815290600101906020018083116103c357829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581525050905092915050565b610414611101565b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054610470906118e7565b80601f016020809104026020016040519081016040528092919081815260200182805461049c906118e7565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b505050505081526020016001820154815260200160028201805461050c906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610538906118e7565b80156105855780601f1061055a57610100808354040283529160200191610585565b820191906000526020600020905b81548152906001019060200180831161056857829003601f168201915b5050505050815260200160038201805461059e906118e7565b80601f01602080910402602001604051908101604052809291908181526020018280546105ca906118e7565b80156106175780601f106105ec57610100808354040283529160200191610617565b820191906000526020600020905b8154815290600101906020018083116105fa57829003601f168201915b505050505081526020016004820160009054906101000a900460ff161515151581525050905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390611975565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075490611975565b60405180910390fd5b826002016001846002018054905061077591906119c4565b81548110610786576107856119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836002016001836107c291906119c4565b815481106107d3576107d26119f8565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808360010160008560020160018561083391906119c4565b81548110610844576108436119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826002018054806108c1576108c0611a27565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905560008360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff021916908315150217905550505050565b6040518060600160405280838152602001828152602001600115158152508460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610a139190611c02565b506020820151816001019081610a299190611c02565b5060408201518160020160006101000a81548160ff02191690831515021790555090505083600201839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600201805490508460010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b606081600201805480602002602001604051908101604052809291908181526020018280548015610b8b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b41575b50505050509050919050565b6040518060a00160405280858152602001848152602001838152602001828152602001600115158152508660000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610c179190611c02565b50602082015181600101556040820151816002019081610c379190611c02565b506060820151816003019081610c4d9190611c02565b5060808201518160040160006101000a81548160ff02191690831515021790555090505085600201859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600201805490508660010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050565b606081600201805480602002602001604051908101604052809291908181526020018280548015610db157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d67575b50505050509050919050565b600081600201805490509050919050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610e57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4e90611d20565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90611d8c565b60405180910390fd5b8260020160018460020180549050610f0091906119c4565b81548110610f1157610f106119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600201600183610f4d91906119c4565b81548110610f5e57610f5d6119f8565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508083600101600085600201600185610fbe91906119c4565b81548110610fcf57610fce6119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260020180548061104c5761104b611a27565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905560008360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600081600201805490509050919050565b604051806060016040528060608152602001606081526020016000151581525090565b6040518060a00160405280606081526020016000815260200160608152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61115981611146565b811461116457600080fd5b50565b60008135905061117681611150565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111a78261117c565b9050919050565b6111b78161119c565b81146111c257600080fd5b50565b6000813590506111d4816111ae565b92915050565b600080604083850312156111f1576111f061113c565b5b60006111ff85828601611167565b9250506020611210858286016111c5565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611254578082015181840152602081019050611239565b60008484015250505050565b6000601f19601f8301169050919050565b600061127c8261121a565b6112868185611225565b9350611296818560208601611236565b61129f81611260565b840191505092915050565b60008115159050919050565b6112bf816112aa565b82525050565b600060608301600083015184820360008601526112e28282611271565b915050602083015184820360208601526112fc8282611271565b915050604083015161131160408601826112b6565b508091505092915050565b6000602082019050818103600083015261133681846112c5565b905092915050565b6000819050919050565b6113518161133e565b811461135c57600080fd5b50565b60008135905061136e81611348565b92915050565b6000806040838503121561138b5761138a61113c565b5b60006113998582860161135f565b92505060206113aa858286016111c5565b9150509250929050565b6000819050919050565b6113c7816113b4565b82525050565b600060a08301600083015184820360008601526113ea8282611271565b91505060208301516113ff60208601826113be565b50604083015184820360408601526114178282611271565b915050606083015184820360608601526114318282611271565b915050608083015161144660808601826112b6565b508091505092915050565b6000602082019050818103600083015261146b81846113cd565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114b582611260565b810181811067ffffffffffffffff821117156114d4576114d361147d565b5b80604052505050565b60006114e7611132565b90506114f382826114ac565b919050565b600067ffffffffffffffff8211156115135761151261147d565b5b61151c82611260565b9050602081019050919050565b82818337600083830152505050565b600061154b611546846114f8565b6114dd565b90508281526020810184848401111561156757611566611478565b5b611572848285611529565b509392505050565b600082601f83011261158f5761158e611473565b5b813561159f848260208601611538565b91505092915050565b600080600080608085870312156115c2576115c161113c565b5b60006115d087828801611167565b94505060206115e1878288016111c5565b935050604085013567ffffffffffffffff81111561160257611601611141565b5b61160e8782880161157a565b925050606085013567ffffffffffffffff81111561162f5761162e611141565b5b61163b8782880161157a565b91505092959194509250565b60006020828403121561165d5761165c61113c565b5b600061166b8482850161135f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116a98161119c565b82525050565b60006116bb83836116a0565b60208301905092915050565b6000602082019050919050565b60006116df82611674565b6116e9818561167f565b93506116f483611690565b8060005b8381101561172557815161170c88826116af565b9750611717836116c7565b9250506001810190506116f8565b5085935050505092915050565b6000602082019050818103600083015261174c81846116d4565b905092915050565b61175d816113b4565b811461176857600080fd5b50565b60008135905061177a81611754565b92915050565b60008060008060008060c0878903121561179d5761179c61113c565b5b60006117ab89828a0161135f565b96505060206117bc89828a016111c5565b955050604087013567ffffffffffffffff8111156117dd576117dc611141565b5b6117e989828a0161157a565b94505060606117fa89828a0161176b565b935050608087013567ffffffffffffffff81111561181b5761181a611141565b5b61182789828a0161157a565b92505060a087013567ffffffffffffffff81111561184857611847611141565b5b61185489828a0161157a565b9150509295509295509295565b6000602082840312156118775761187661113c565b5b600061188584828501611167565b91505092915050565b611897816113b4565b82525050565b60006020820190506118b2600083018461188e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118ff57607f821691505b602082108103611912576119116118b8565b5b50919050565b600082825260208201905092915050565b7f4e6f7420616e2061637469766520646f63746f72000000000000000000000000600082015250565b600061195f601483611918565b915061196a82611929565b602082019050919050565b6000602082019050818103600083015261198e81611952565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119cf826113b4565b91506119da836113b4565b92508282039050818111156119f2576119f1611995565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ab87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a7b565b611ac28683611a7b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611aff611afa611af5846113b4565b611ada565b6113b4565b9050919050565b6000819050919050565b611b1983611ae4565b611b2d611b2582611b06565b848454611a88565b825550505050565b600090565b611b42611b35565b611b4d818484611b10565b505050565b5b81811015611b7157611b66600082611b3a565b600181019050611b53565b5050565b601f821115611bb657611b8781611a56565b611b9084611a6b565b81016020851015611b9f578190505b611bb3611bab85611a6b565b830182611b52565b50505b505050565b600082821c905092915050565b6000611bd960001984600802611bbb565b1980831691505092915050565b6000611bf28383611bc8565b9150826002028217905092915050565b611c0b8261121a565b67ffffffffffffffff811115611c2457611c2361147d565b5b611c2e82546118e7565b611c39828285611b75565b600060209050601f831160018114611c6c5760008415611c5a578287015190505b611c648582611be6565b865550611ccc565b601f198416611c7a86611a56565b60005b82811015611ca257848901518255600182019150602085019450602081019050611c7d565b86831015611cbf5784890151611cbb601f891682611bc8565b8355505b6001600288020188555050505b505050505050565b7f506861726d6163697374206e6f74207265676973746572656400000000000000600082015250565b6000611d0a601983611918565b9150611d1582611cd4565b602082019050919050565b60006020820190508181036000830152611d3981611cfd565b9050919050565b7f506861726d6163697374206e6f74207665726966696564000000000000000000600082015250565b6000611d76601783611918565b9150611d8182611d40565b602082019050919050565b60006020820190508181036000830152611da581611d69565b905091905056fea26469706673582212201ca549800f7ef4f56b70379f728cb999fb113c58bdc7acda2aa84b8313e49cd664736f6c634300081c0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100a85760003560e01c80638e7cc4bc116100705780638e7cc4bc1461018f5780638f77b68d146101b8578063c5f5d36f146101e8578063e075debc14610218578063f3208c1e14610241576100a8565b806326dd7c36146100ad57806349a839a7146100dd57806355c473871461010d5780635da03710146101365780637e39afd61461015f575b600080fd5b6100c760048036038101906100c291906111da565b610271565b6040516100d4919061131c565b60405180910390f35b6100f760048036038101906100f29190611374565b61040c565b6040516101049190611451565b60405180910390f35b81801561011957600080fd5b50610134600480360381019061012f9190611374565b610643565b005b81801561014257600080fd5b5061015d600480360381019061015891906115a8565b61099f565b005b61017960048036038101906101749190611647565b610b05565b6040516101869190611732565b60405180910390f35b81801561019b57600080fd5b506101b660048036038101906101b19190611780565b610b97565b005b6101d260048036038101906101cd9190611861565b610d2b565b6040516101df9190611732565b60405180910390f35b61020260048036038101906101fd9190611647565b610dbd565b60405161020f919061189d565b60405180910390f35b81801561022457600080fd5b5061023f600480360381019061023a91906111da565b610dce565b005b61025b60048036038101906102569190611861565b6110cd565b604051610268919061189d565b60405180910390f35b6102796110de565b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820180546102d5906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610301906118e7565b801561034e5780601f106103235761010080835404028352916020019161034e565b820191906000526020600020905b81548152906001019060200180831161033157829003601f168201915b50505050508152602001600182018054610367906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610393906118e7565b80156103e05780601f106103b5576101008083540402835291602001916103e0565b820191906000526020600020905b8154815290600101906020018083116103c357829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581525050905092915050565b610414611101565b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054610470906118e7565b80601f016020809104026020016040519081016040528092919081815260200182805461049c906118e7565b80156104e95780601f106104be576101008083540402835291602001916104e9565b820191906000526020600020905b8154815290600101906020018083116104cc57829003601f168201915b505050505081526020016001820154815260200160028201805461050c906118e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610538906118e7565b80156105855780601f1061055a57610100808354040283529160200191610585565b820191906000526020600020905b81548152906001019060200180831161056857829003601f168201915b5050505050815260200160038201805461059e906118e7565b80601f01602080910402602001604051908101604052809291908181526020018280546105ca906118e7565b80156106175780601f106105ec57610100808354040283529160200191610617565b820191906000526020600020905b8154815290600101906020018083116105fa57829003601f168201915b505050505081526020016004820160009054906101000a900460ff161515151581525050905092915050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116106cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c390611975565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661075d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075490611975565b60405180910390fd5b826002016001846002018054905061077591906119c4565b81548110610786576107856119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836002016001836107c291906119c4565b815481106107d3576107d26119f8565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808360010160008560020160018561083391906119c4565b81548110610844576108436119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550826002018054806108c1576108c0611a27565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905560008360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008360000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160006101000a81548160ff021916908315150217905550505050565b6040518060600160405280838152602001828152602001600115158152508460000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610a139190611c02565b506020820151816001019081610a299190611c02565b5060408201518160020160006101000a81548160ff02191690831515021790555090505083600201839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600201805490508460010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b606081600201805480602002602001604051908101604052809291908181526020018280548015610b8b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b41575b50505050509050919050565b6040518060a00160405280858152602001848152602001838152602001828152602001600115158152508660000160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019081610c179190611c02565b50602082015181600101556040820151816002019081610c379190611c02565b506060820151816003019081610c4d9190611c02565b5060808201518160040160006101000a81548160ff02191690831515021790555090505085600201859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600201805490508660010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050505050565b606081600201805480602002602001604051908101604052809291908181526020018280548015610db157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d67575b50505050509050919050565b600081600201805490509050919050565b60008260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610e57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4e90611d20565b60405180910390fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16610ee8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edf90611d8c565b60405180910390fd5b8260020160018460020180549050610f0091906119c4565b81548110610f1157610f106119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683600201600183610f4d91906119c4565b81548110610f5e57610f5d6119f8565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508083600101600085600201600185610fbe91906119c4565b81548110610fcf57610fce6119f8565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508260020180548061104c5761104b611a27565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905560008360010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b600081600201805490509050919050565b604051806060016040528060608152602001606081526020016000151581525090565b6040518060a00160405280606081526020016000815260200160608152602001606081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61115981611146565b811461116457600080fd5b50565b60008135905061117681611150565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111a78261117c565b9050919050565b6111b78161119c565b81146111c257600080fd5b50565b6000813590506111d4816111ae565b92915050565b600080604083850312156111f1576111f061113c565b5b60006111ff85828601611167565b9250506020611210858286016111c5565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611254578082015181840152602081019050611239565b60008484015250505050565b6000601f19601f8301169050919050565b600061127c8261121a565b6112868185611225565b9350611296818560208601611236565b61129f81611260565b840191505092915050565b60008115159050919050565b6112bf816112aa565b82525050565b600060608301600083015184820360008601526112e28282611271565b915050602083015184820360208601526112fc8282611271565b915050604083015161131160408601826112b6565b508091505092915050565b6000602082019050818103600083015261133681846112c5565b905092915050565b6000819050919050565b6113518161133e565b811461135c57600080fd5b50565b60008135905061136e81611348565b92915050565b6000806040838503121561138b5761138a61113c565b5b60006113998582860161135f565b92505060206113aa858286016111c5565b9150509250929050565b6000819050919050565b6113c7816113b4565b82525050565b600060a08301600083015184820360008601526113ea8282611271565b91505060208301516113ff60208601826113be565b50604083015184820360408601526114178282611271565b915050606083015184820360608601526114318282611271565b915050608083015161144660808601826112b6565b508091505092915050565b6000602082019050818103600083015261146b81846113cd565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114b582611260565b810181811067ffffffffffffffff821117156114d4576114d361147d565b5b80604052505050565b60006114e7611132565b90506114f382826114ac565b919050565b600067ffffffffffffffff8211156115135761151261147d565b5b61151c82611260565b9050602081019050919050565b82818337600083830152505050565b600061154b611546846114f8565b6114dd565b90508281526020810184848401111561156757611566611478565b5b611572848285611529565b509392505050565b600082601f83011261158f5761158e611473565b5b813561159f848260208601611538565b91505092915050565b600080600080608085870312156115c2576115c161113c565b5b60006115d087828801611167565b94505060206115e1878288016111c5565b935050604085013567ffffffffffffffff81111561160257611601611141565b5b61160e8782880161157a565b925050606085013567ffffffffffffffff81111561162f5761162e611141565b5b61163b8782880161157a565b91505092959194509250565b60006020828403121561165d5761165c61113c565b5b600061166b8482850161135f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6116a98161119c565b82525050565b60006116bb83836116a0565b60208301905092915050565b6000602082019050919050565b60006116df82611674565b6116e9818561167f565b93506116f483611690565b8060005b8381101561172557815161170c88826116af565b9750611717836116c7565b9250506001810190506116f8565b5085935050505092915050565b6000602082019050818103600083015261174c81846116d4565b905092915050565b61175d816113b4565b811461176857600080fd5b50565b60008135905061177a81611754565b92915050565b60008060008060008060c0878903121561179d5761179c61113c565b5b60006117ab89828a0161135f565b96505060206117bc89828a016111c5565b955050604087013567ffffffffffffffff8111156117dd576117dc611141565b5b6117e989828a0161157a565b94505060606117fa89828a0161176b565b935050608087013567ffffffffffffffff81111561181b5761181a611141565b5b61182789828a0161157a565b92505060a087013567ffffffffffffffff81111561184857611847611141565b5b61185489828a0161157a565b9150509295509295509295565b6000602082840312156118775761187661113c565b5b600061188584828501611167565b91505092915050565b611897816113b4565b82525050565b60006020820190506118b2600083018461188e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118ff57607f821691505b602082108103611912576119116118b8565b5b50919050565b600082825260208201905092915050565b7f4e6f7420616e2061637469766520646f63746f72000000000000000000000000600082015250565b600061195f601483611918565b915061196a82611929565b602082019050919050565b6000602082019050818103600083015261198e81611952565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119cf826113b4565b91506119da836113b4565b92508282039050818111156119f2576119f1611995565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611ab87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a7b565b611ac28683611a7b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611aff611afa611af5846113b4565b611ada565b6113b4565b9050919050565b6000819050919050565b611b1983611ae4565b611b2d611b2582611b06565b848454611a88565b825550505050565b600090565b611b42611b35565b611b4d818484611b10565b505050565b5b81811015611b7157611b66600082611b3a565b600181019050611b53565b5050565b601f821115611bb657611b8781611a56565b611b9084611a6b565b81016020851015611b9f578190505b611bb3611bab85611a6b565b830182611b52565b50505b505050565b600082821c905092915050565b6000611bd960001984600802611bbb565b1980831691505092915050565b6000611bf28383611bc8565b9150826002028217905092915050565b611c0b8261121a565b67ffffffffffffffff811115611c2457611c2361147d565b5b611c2e82546118e7565b611c39828285611b75565b600060209050601f831160018114611c6c5760008415611c5a578287015190505b611c648582611be6565b865550611ccc565b601f198416611c7a86611a56565b60005b82811015611ca257848901518255600182019150602085019450602081019050611c7d565b86831015611cbf5784890151611cbb601f891682611bc8565b8355505b6001600288020188555050505b505050505050565b7f506861726d6163697374206e6f74207265676973746572656400000000000000600082015250565b6000611d0a601983611918565b9150611d1582611cd4565b602082019050919050565b60006020820190508181036000830152611d3981611cfd565b9050919050565b7f506861726d6163697374206e6f74207665726966696564000000000000000000600082015250565b6000611d76601783611918565b9150611d8182611d40565b602082019050919050565b60006020820190508181036000830152611da581611d69565b905091905056fea26469706673582212201ca549800f7ef4f56b70379f728cb999fb113c58bdc7acda2aa84b8313e49cd664736f6c634300081c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}